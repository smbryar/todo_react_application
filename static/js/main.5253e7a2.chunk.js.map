{"version":3,"sources":["TaskGraph/Example_Task_Graph.jpg","Header/Header.js","ButtonItem/SimpleButton.js","TaskItem/TaskComponents/TaskBody.js","ButtonItem/ButtonItem.js","TaskItem/TaskComponents/TaskProgressBar.js","TaskItem/TaskComponents/TaskHeader.js","TaskItem/TaskItem.js","AddTask/FormComponents/AddTaskHeader.js","AddTask/FormComponents/NameField.js","AddTask/FormComponents/TaskDetailsField.js","AddTask/FormComponents/DatesField.js","AddTask/FormComponents/DoesNotRepeatField.js","AddTask/FormComponents/RepeatsAfterCompletionField.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","TaskGraph/CustomTooltip.js","TaskGraph/TaskGraph.js","TaskGraph/NoTasksGraph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","expanded","setExpanded","Navbar","className","expand","fixed","Brand","Toggle","aria-controls","onClick","Collapse","id","Nav","to","SimpleButton","variant","children","TaskBody","in","cardOpen","Card","Body","tabIndex","completed","Row","Col","xs","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatAfterCompletionFrequency","repeatAfterCompletionFrequencyType","substring","length","handleCompleteClick","handleDeleteClick","CheckboxIcon","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","TaskProgressBar","percentageCompletion","role","style","backgroundImage","colour2","colour3","colourRange","green2","calculateColourRange","produceStyle","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskHeader","aria-expanded","open","textDecoration","cursor","openTaskCard","taskID","target","charCode","name","ButtonGroup","OverlayTrigger","placement","overlay","Tooltip","TaskItem","deleteTask","completeTask","backgroundColor","setOpen","AddTaskHeader","as","onKeyPress","NameField","Form","Group","controlId","Control","type","placeholder","errors","onChange","e","setName","value","TaskDetailsField","setTaskDetails","DatesField","Label","setStartDate","setEndDate","DoesNotRepeatField","Check","defaultChecked","handleRadioButton","RepeatsAfterCompletionField","setRepeatAfterCompletionFrequency","custom","setRepeatAfterCompletionFrequencyType","AddTask","setRepeats","repeatType","setRepeatType","setErrors","event","updatedErrors","Object","assign","addTask","Intro","tasksDueToday","tasks","filter","t","tasksNotCompleted","TaskList","uuidv4","addTaskKey","setAddTaskKey","key","repeatRegularDaysFrequency","repeatRegularDaysArrayDays","sort","a","b","map","task","CustomTooltip","tinycolor","point","serieColor","lighten","toString","data","y","endsWith","x","withRouter","newTask","startData","endData","Container","fluid","window","innerHeight","margin","top","right","bottom","left","xScale","xFormat","yScale","axisTop","axisRight","axisLeft","renderTick","textAnchor","textBaseline","trimWordsOverLength","RegExp","MAX_LINE_LENGTH","groupWordsByLength","splitValues","replace","match","slice","val","i","dy","fontFamily","fontSize","transform","alignmentBaseline","axisBottom","tickRotation","tickPadding","theme","colors","scheme","lineWidth","pointSize","enableGridX","enableGridY","tooltip","useMesh","Point","history","push","openFromGraphId","enableCrosshair","NoTasksGraph","textAlign","Image","src","require","App","document","body","addEventListener","classList","add","keyCode","remove","setTasks","calculatePercentageCompletion","now","valueOf","start","isFinite","updatedTasks","useEffect","axios","get","then","response","console","log","catch","error","path","userID","post","updatedTask","find","put","delete","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5253e7a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Example_Task_Graph.879d9a8f.jpg\";","import React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nfunction Header(props) {\n    const [expanded, setExpanded] = useState(false);\n    return (\n        <Navbar className=\"navbar--my-tasks-app\" expand=\"sm\" fixed=\"top\" expanded={expanded}>\n            <Navbar.Brand className=\"brand--my-tasks-app\">My Tasks App</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav onClick={() => setExpanded(false)}>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/\" >Tasks</Link>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/graph\" >Graph</Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nimport './SimpleButton.css';\n\n\nfunction SimpleButton (props) {\n  return (\n    <button className={`simple-button-${props.variant} simple-button btn btn-block mt-3`} onClick={props.onClick}>{props.children}</button>\n  )\n}\n\n\nexport default SimpleButton;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Row, Col } from 'react-bootstrap';\n\nimport SimpleButton from '../../ButtonItem/SimpleButton';\n\nfunction TaskBody(props) {\n    return (\n        <Collapse in={props.cardOpen}>\n            <Card.Body tabIndex=\"0\">\n                {!props.completed &&\n                    <Row>\n                        <Col xs={6}>\n                            <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                        <Col xs={6} className=\"col-6 text-right\">\n                            <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                    </Row>}\n                {!!props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n                <Row>\n                    <Col>\n                        <h6>{props.taskDetails}</h6>\n                    </Col>\n                </Row>\n                {!!props.repeats &&\n                    <Row>\n                        <Col>\n                            <h6>This task repeats {props.repeatAfterCompletionFrequency} {props.repeatAfterCompletionFrequency === 1? props.repeatAfterCompletionFrequencyType.substring(0,props.repeatAfterCompletionFrequencyType.length-1):props.repeatAfterCompletionFrequencyType} after being completed.</h6>\n                        </Col>\n                    </Row>\n                }\n                <Row>\n                    {!props.completed && <Col xs={6}>\n                        <SimpleButton onClick={props.handleCompleteClick} variant=\"complete\">Complete task</SimpleButton>\n                    </Col>}\n                    <Col>\n                        <SimpleButton onClick={props.handleDeleteClick} variant=\"delete\">Delete task</SimpleButton>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Collapse>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n\n  function calculateColourRange(width) {\n    let colour1 = \"rgb(0,128,0)\"\n    let colour2, colour3, colourRange;\n\n    if (width <= 50) {\n      let red2 = 255 * width / 50;\n      let green2 = 128 + 127 * width / 50;\n      colour2 = `rgb(${red2},${green2},0)`;\n      colourRange = `${colour1},${colour2}`;\n    }\n\n    if (width >= 50) {\n      let red2 = 255 * width / (2 * 50);\n      let green2 = 128 + 127 * width / (2 * 50);\n      colour2 = `rgb(${red2},${green2},0)`;\n      let green3 = 255 - 255 * (width - 50) / 50;\n      colour3 = `rgb(255,${green3},0)`;\n      colourRange = `${colour1},${colour2},${colour3}`;\n    }\n    return colourRange;\n  }\n\n  function produceStyle(width) {\n    const style = {}\n    if (width < 5) {\n      width = 5;      \n    }\n    style.backgroundImage = `linear-gradient(to right,${calculateColourRange(width)})`;\n    style.width = `${width}%` \n    return style;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={produceStyle(width)} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip, Row, Col, ButtonGroup } from 'react-bootstrap';\n\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../../ButtonItem/ButtonItem';\nimport TaskProgressBar from './TaskProgressBar';\n\n\nfunction TaskHeader(props) {\n\n  function handleHeaderClick() {\n    props.openTaskCard(props.taskID);\n  }\n  return (\n    <Card.Header\n      className=\"h4\"\n      aria-controls=\"task-item-contents\"\n      aria-expanded={props.open}\n    >\n      <Row>\n        <Col xs={8}\n          style={{ textDecoration: props.completed ? 'line-through' : '' }}\n          tabIndex=\"0\"\n          style={{cursor: \"pointer\"}}\n          onClick={handleHeaderClick}\n          onKeyPress={(target) => target.charCode === 13 ? props.openTaskCard(props.taskID) : null}>\n          {props.repeats === 1 && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n        </Col>\n\n        <Col xs={4}>\n          <ButtonGroup className=\"float-right\">\n            {!props.completed &&\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip>Mark as complete</Tooltip>}>\n                <ButtonItem onClick={props.handleCompleteClick} aria-label=\"Mark as complete\">\n                  <CheckboxIcon squareHeight=\"1.5em\" />\n                </ButtonItem>\n              </OverlayTrigger>}\n\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\n              <ButtonItem onClick={props.handleDeleteClick} aria-label=\"Delete\">\n                <DeleteIcon squareHeight=\"1.3em\" />\n              </ButtonItem>\n            </OverlayTrigger>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n      {!props.completed && <Row>\n        <Col>\n          <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n        </Col>\n      </Row>}\n\n    </Card.Header>\n  );\n}\n\nexport default TaskHeader;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TaskBody from './TaskComponents/TaskBody';\nimport TaskHeader from './TaskComponents/TaskHeader';\n\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n\n  function handleDeleteClick() {\n    props.deleteTask(props.taskID)\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.taskID)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{ backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6' }}>\n      <TaskHeader {...props} open={props.open} setOpen={props.setOpen} handleCompleteClick={handleCompleteClick} handleDeleteClick={handleDeleteClick} openTaskCard={props.openTaskCard}/>\n      <TaskBody {...props} open={props.open} handleDeleteClick={handleDeleteClick} handleCompleteClick={handleCompleteClick} />\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\n\nimport { AddIcon } from '../../ButtonItem/ButtonItem';\nimport { Card} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction AddTaskHeader(props) {\n    return (\n        <Card.Header\n            tabIndex=\"0\"\n            as=\"h4\"\n            aria-controls=\"add-task-contents\"\n            aria-expanded={props.open}\n            style={{cursor: \"pointer\"}}\n            onClick={() => props.setOpen(!props.open)}\n            onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}\n        >\n            <div className=\"row\">\n                <div className=\"col-10 align-self-center\"\n                    >\n                    Add Task\n          </div>\n                <div className=\"col-2\">\n                    <div className=\"float-right\">\n                        <AddIcon squareHeight=\"1.2em\" />\n                    </div>\n                </div>\n            </div>\n        </Card.Header>\n    )\n}\n\nexport default AddTaskHeader;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction NameField(props) {\n  return (\n    <Form.Group controlId=\"formTaskName\">\n      <Form.Control \n        type=\"text\" \n        placeholder={props.errors.name ? \"Input a name for your task\":\"Name your next task\"}\n        onChange={e => props.setName(e.target.value)} \n        style={props.errors.name ? {backgroundColor:\"yellow\"} : null}\n      />\n    </Form.Group>\n  )\n}\n\nexport default NameField;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction TaskDetailsField(props) {\n    return (\n      <Form.Group controlId=\"formTaskDetails\">\n        <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange={e => props.setTaskDetails(e.target.value)} />\n      </Form.Group>\n    )\n}\n\nexport default TaskDetailsField;","import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DatesField(props) {\n  return (\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formStartDate\">\n        <Form.Label>When should you start this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setStartDate(e.target.value)} />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"formEndDate\">\n        <Form.Label>When do you need to finish this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setEndDate(e.target.value)} />\n      </Form.Group>\n    </Form.Row>\n  )\n}\n\nexport default DatesField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DoesNotRepeatField(props) {\n  return (\n    <>\n      {props.errors.repeats && <span className=\"error\">Select whether this task repeats</span>}\n      <Form.Row className=\"customRow\" >\n        <Form.Check defaultChecked type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange={props.handleRadioButton}/>\n        <div className=\"col align-self-center\">\n          <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n        </div>\n      </Form.Row >\n    </>\n  )\n}\n\nexport default DoesNotRepeatField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction RepeatsAfterCompletionField(props) {\n  return (\n    <Form.Row className=\"customRow\">\n      <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"repeatsAfterCompletion\" onChange={props.handleRadioButton} />\n      <div className=\"col-4 col-md-2 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n      </div>\n\n      <div className=\"col-3 col-md-1\">\n        <Form.Control \n          type=\"number\" \n          onChange={e => props.setRepeatAfterCompletionFrequency(e.target.value)} \n          placeholder={props.errors.repeatAfterCompletionFrequency ? \"?\": null}\n          style={props.errors.repeatAfterCompletionFrequency ? {backgroundColor:\"yellow\"} : null}\n        />\n      </div>\n      <div className=\"col-4 col-md-2\">\n        <Form.Control as=\"select\" custom onChange={e => props.setRepeatAfterCompletionFrequencyType(e.target.value)}>\n          <option>days</option>\n          <option>weeks</option>\n          <option>months</option>\n          <option>years</option>\n        </Form.Control>\n\n      </div>\n      <div className=\"col-12 col-md-6 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n      </div>\n    </Form.Row>\n\n  )\n}\n\nexport default RepeatsAfterCompletionField;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Form } from 'react-bootstrap';\n\nimport AddTaskHeader from './FormComponents/AddTaskHeader';\nimport NameField from './FormComponents/NameField';\nimport TaskDetailsField from './FormComponents/TaskDetailsField';\nimport DatesField from './FormComponents/DatesField';\nimport DoesNotRepeatField from './FormComponents/DoesNotRepeatField';\nimport RepeatsAfterCompletionField from './FormComponents/RepeatsAfterCompletionField';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n// import RepeatsRegularDaysField from './FormComponents/RepeatsRegularDaysField';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [repeats, setRepeats] = useState(false);\n  const [repeatType, setRepeatType] = useState(null);\n  const [repeatAfterCompletionFrequency, setRepeatAfterCompletionFrequency] = useState(null);\n  const [repeatAfterCompletionFrequencyType, setRepeatAfterCompletionFrequencyType] = useState(\"days\");\n  // const [repeatRegularDaysFrequency, setRepeatRegularDaysFrequency] = useState(null);\n  // const [repeatRegularDaysArrayDays, setRepeatRegularDaysArrayDays] = useState([false, false, false, false, false, false, false]);\n  const [errors, setErrors] = useState({ name: false, repeatAfterCompletionFrequency: false });\n\n  function handleAddTaskClick() {\n    if (name === \"\" || repeats === null || (repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null)) {\n      const updatedErrors = Object.assign({}, errors);\n      name === \"\" ? updatedErrors.name = true : updatedErrors.name = false;\n      repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null ? updatedErrors.repeatAfterCompletionFrequency = true : updatedErrors.repeatAfterCompletionFrequency = false;\n      setErrors(updatedErrors);\n    }\n    else {\n      props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType,\n        repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType);\n      }\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"repeatsAfterCompletion\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsAfterCompletion\");\n    }\n    else if (event.target.value === \"repeatsRegularDays\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsRegularDays\");\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  // function handleDayCheckboxes(e) {\n  //   repeatRegularDaysArrayDays[e.target.value] = !repeatRegularDaysArrayDays[e.target.value];\n  //   setRepeatRegularDaysArrayDays(repeatRegularDaysArrayDays);\n  // }\n\n  return (\n    <Card className=\"add-task\">\n      <AddTaskHeader open={open} setOpen={setOpen} />\n      <Collapse in={open}>\n        <Card.Body>\n          <Form>\n            <NameField setName={setName} errors={errors} />\n            <TaskDetailsField setTaskDetails={setTaskDetails} />\n            <DatesField setStartDate={setStartDate} setEndDate={setEndDate} />\n            <DoesNotRepeatField errors={errors} handleRadioButton={handleRadioButton} />\n            <RepeatsAfterCompletionField errors={errors} handleRadioButton={handleRadioButton} setRepeatAfterCompletionFrequency={setRepeatAfterCompletionFrequency} setRepeatAfterCompletionFrequencyType={setRepeatAfterCompletionFrequencyType} />\n            {/* <RepeatsRegularDaysField errors={errors} handleRadioButton={handleRadioButton} setRepeatRegularDaysFrequency={setRepeatRegularDaysFrequency} handleDayCheckboxes={handleDayCheckboxes} /> */}\n          </Form>\n          <SimpleButton variant=\"add-task\" onClick={handleAddTaskClick}>Submit Task</SimpleButton> \n          </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks && props.tasks.filter(t=>t.endDate.substring(0,10) === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks && props.tasks.filter(t=>t.completed === 0).length;\n\n    return (\n        <Card.Header className=\"intro\" tabIndex=\"0\">\n            <h4>You have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}</h4>\n        </Card.Header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\n\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    const [addTaskKey, setAddTaskKey] = useState(uuidv4());  \n\n    function compare(a, b) {\n        if (a.completed)  return 1; // completed tasks come at bottom of list\n        if (a.endDate > b.endDate) return 1; // items ordered by proximity of end date\n        if (a.startDate < b.startDate) return -1;\n        return 0;\n    }\n\n    function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n\n        setAddTaskKey(uuidv4());\n\n        props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n            repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays);\n    }\n\n    return (\n        <Col>\n            <Row className=\"my-2\">\n                <Intro tasks={props.tasks} />\n            </Row>\n\n            <Row className=\"my-2\">\n                <AddTask key={addTaskKey} addTask={addTask} tasks={props.tasks}/>\n                </Row>\n\n            {props.tasks && props.tasks.sort(compare).map(task => (\n                <Row key={task.taskID} id={task.taskID} className=\"my-2\">\n                    <TaskItem completeTask={props.completeTask} deleteTask={props.deleteTask} openTaskCard={props.openTaskCard} {...task} />\n                </Row>\n            ))}\n\n        </Col>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport moment from 'moment';\nimport './CustomTooltip.css';\nimport tinycolor from 'tinycolor2';\n\nfunction CustomTooltip(props) {  \n  return (\n        <div className=\"tooltip--container\" style={{backgroundColor: `${tinycolor(props.point.serieColor).lighten(15).toString()}`}}>\n            {props.point.data.y} <br/>\n            {props.point.id.endsWith(\"0\") && \"Start: \"}            \n            {props.point.id.endsWith(\"1\") && \"Due: \"}\n            {moment(props.point.data.x).format(\"MMM DD\")}\n        </div>\n        )      \n}\n\nexport default CustomTooltip;\n\n\n","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\n\nimport CustomTooltip from './CustomTooltip';\n\nimport './TaskGraph.css';\n\nfunction TaskGraph(props) {\n\n  const theme = {\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\"\n  };\n\n  const data = props.tasks.filter(task => !task.completed).map(task => {\n    let newTask = {};\n    newTask.id = task.taskID;\n    let startData = {};\n    startData.x = moment(task.startDate).format(\"YYYY-MM-DD\");\n    startData.y = task.name;\n    let endData = {};\n    endData.x = moment(task.endDate).format(\"YYYY-MM-DD\");\n    endData.y = task.name;\n    newTask.data = [startData, endData];\n    return newTask;\n  })\n\n  function handleGraphClick(Point) {\n    const id = Point.id.slice(0, -2);\n    props.history.push(\"/\");\n    props.openFromGraphId(id);\n  }\n\n  // Using code from tylercrosse https://github.com/plouc/nivo/issues/353\n  const HorizontalTick = ({ textAnchor, textBaseline, value, x, y }) => {\n    const MAX_LINE_LENGTH = 16;\n    const MAX_LINES = 2;\n    const LENGTH_OF_ELLIPSIS = 3;\n    const TRIM_LENGTH = MAX_LINE_LENGTH * MAX_LINES - LENGTH_OF_ELLIPSIS;\n    const trimWordsOverLength = new RegExp(`^(.{${TRIM_LENGTH}}[^\\\\w]*).*`);\n    const groupWordsByLength = new RegExp(\n      `([^\\\\s].{0,${MAX_LINE_LENGTH}}(?=[\\\\s\\\\W]|$))`,\n      'gm',\n    );\n    const splitValues = value\n      .replace(trimWordsOverLength, '$1...')\n      .match(groupWordsByLength)\n      .slice(0, 2)\n      .map((val, i) => (\n        <tspan\n          key={val}\n          dy={16 * i}\n          x={-15}\n          style={{ fontFamily: \"Verdana, Arial, sans-serif\", fontSize: \"14px\" }}\n        >\n          {val}\n        </tspan>\n      ));\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text alignmentBaseline={textBaseline} textAnchor={textAnchor}>\n          {splitValues}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <Container fluid=\"lg\" style={{ height: window.innerHeight - 125 < 600 ? window.innerHeight - 125 : 600 }}>\n      <ResponsiveLine className=\"graph\" style={{ cursor: \"crosshair\" }}\n        data={data}\n        margin={{ top: 70, right: 20, bottom: 70, left: 150 }}\n        xScale={{\n          type: \"time\",\n          format: \"%Y-%m-%d\"\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{\n          type: \"point\"\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          renderTick: HorizontalTick\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickRotation: -45,\n          tickPadding: 15\n        }}\n        theme={theme}\n        colors={{ scheme: \"accent\" }}\n        lineWidth={20}\n        pointSize={20}\n        enableGridX={true}\n        enableGridY={true}\n        tooltip={CustomTooltip}\n        useMesh={true}\n        onClick={handleGraphClick}\n        enableCrosshair={false}\n      />\n    </Container>\n  );\n}\n\nexport default withRouter(TaskGraph);\n\n\n","import React from 'react';\nimport {Container, Image} from 'react-bootstrap';\n\n\nfunction NoTasksGraph(props) {\n  return (\n    <Container fluid=\"lg\">\n        <h3 style = {{textAlign: \"center\"}}>Start adding tasks to see them displayed here, like the example below.</h3>\n        <Image src={require(`./Example_Task_Graph.jpg`)} fluid/>\n    </Container>\n  );\n}\n\nexport default NoTasksGraph;\n\n\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Header from './Header/Header';\nimport TaskList from './TaskList/TaskList';\nimport TaskGraph from './TaskGraph/TaskGraph';\nimport NoTasksGraph from './TaskGraph/NoTasksGraph';\n\nimport './App.css';\n\nfunction App() {\n  // listen for use of mouse\n  document.body.addEventListener('mousedown', function () {\n    document.body.classList.add('using-mouse');\n  });\n\n  // listen for use of tab\n  document.body.addEventListener('keydown', function (event) {\n    if (event.keyCode === 9) {\n      document.body.classList.remove('using-mouse');\n    }\n  });\n\n  const [tasks, setTasks] = useState();\n\n  useEffect(() => {\n    axios\n      .get(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks\")\n      .then(response => {\n        let updatedTasks = response.data.tasks.map(task => {\n          task.percentageCompletion = calculatePercentageCompletion(task.startDate, task.endDate);\n          task.cardOpen = false;\n          return task;\n        })\n        console.log(\"Setting tasks\")\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }, []);\n\n  function deleteTask(taskID) {\n    axios\n      .delete(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`)\n      .then(response => {\n        const updatedTasks = tasks.filter(task => task.taskID !== taskID);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function calculatePercentageCompletion(startDate, endDate) {\n    const now = moment().valueOf();\n    const start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    const end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n    const percentageCompletion = ((now - start) / (end - start)) * 100;\n    if (percentageCompletion < 0) return 0;\n    return isFinite(percentageCompletion) ? percentageCompletion : 100;\n  }\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n    repeatAfterCompletionFrequencyType) {\n    const newTask = {\n      userID: 1,\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatType,\n      repeatAfterCompletionFrequency,\n      repeatAfterCompletionFrequencyType,\n      completed: false,\n      percentageCompletion: calculatePercentageCompletion(startDate, endDate),\n      cardOpen: false\n    };\n\n    axios\n      .post(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks\", newTask)\n      .then(response => {\n        newTask.taskID = response.data.newTask[0].taskID;\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function completeTask(taskID) {\n    const updatedTask = tasks.find(task => task.taskID === taskID);\n\n    if (!updatedTask.repeats) {\n      updatedTask.completed = true;\n      updatedTask.completeDate = moment().format(\"YYYY-MM-DD\");\n    }\n    else if (updatedTask.repeatType === \"repeatsAfterCompletion\") {\n      updatedTask.endDate = moment().add(updatedTask.repeatAfterCompletionFrequency, updatedTask.repeatAfterCompletionFrequencyType).format(\"YYYY-MM-DD\");\n      updatedTask.startDate = moment().format(\"YYYY-MM-DD\");\n    }\n\n    axios\n      .put(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`, updatedTask)\n      .then(response => {\n        const updatedTasks = [...tasks].map(task => task.taskID === taskID ? updatedTask : task);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }\n\n  function openTaskCard(taskID) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID === taskID) { task.cardOpen = !task.cardOpen }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  function openFromGraphId(taskID) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID === taskID) { task.cardOpen = true }\n      else { task.cardOpen = false }\n      return task\n    })\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/graph\">\n            {tasks ? <TaskGraph tasks={tasks} openFromGraphId={openFromGraphId}/> : <NoTasksGraph/>}\n          </Route>\n          <Route path=\"/\">\n            <Container fluid=\"lg\">\n              <TaskList addTask={addTask} completeTask={completeTask} deleteTask={deleteTask} tasks={tasks} openFromGraphId={openFromGraphId} openTaskCard={openTaskCard} />\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}