{"version":3,"sources":["TaskGraph/Example_Task_Graph.jpg","ButtonItem/SimpleButton.js","Login/Login.js","Header/Header.js","TaskItem/TaskComponents/TaskBody.js","ButtonItem/ButtonItem.js","TaskItem/TaskComponents/TaskProgressBar.js","TaskItem/TaskComponents/TaskHeader.js","TaskItem/TaskItem.js","AddTask/FormComponents/AddTaskHeader.js","AddTask/FormComponents/NameField.js","AddTask/FormComponents/TaskDetailsField.js","AddTask/FormComponents/DatesField.js","AddTask/FormComponents/DoesNotRepeatField.js","AddTask/FormComponents/RepeatsAfterCompletionField.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","TaskGraph/CustomTooltip.js","TaskGraph/TaskGraph.js","TaskGraph/NoTasksGraph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleButton","props","className","variant","disabled","onClick","children","Login","useState","username","setUsername","newUsername","setNewUsername","usernameError","setUsernameError","newUsernameError","setNewUsernameError","Container","Row","Col","xs","lg","Form","class","Group","controlId","Control","autoFocus","required","type","placeholder","value","onChange","e","target","length","Text","style","color","preventDefault","axios","get","then","response","data","user","setUserID","userID","catch","error","console","log","newUser","Error","post","newUserID","Header","expanded","setExpanded","Navbar","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","to","handleLogOut","TaskBody","in","cardOpen","Card","Body","tabIndex","completed","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatAfterCompletionFrequency","repeatAfterCompletionFrequencyType","substring","handleCompleteClick","handleDeleteClick","CheckboxIcon","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","TaskProgressBar","percentageCompletion","role","backgroundImage","colour2","colour3","colourRange","green2","calculateColourRange","produceStyle","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskHeader","aria-expanded","open","textDecoration","cursor","openTaskCard","taskID","onKeyPress","charCode","name","ButtonGroup","TaskItem","deleteTask","completeTask","backgroundColor","setOpen","AddTaskHeader","as","NameField","errors","setName","TaskDetailsField","setTaskDetails","DatesField","Label","setStartDate","setEndDate","DoesNotRepeatField","Check","defaultChecked","handleRadioButton","RepeatsAfterCompletionField","setRepeatAfterCompletionFrequency","custom","setRepeatAfterCompletionFrequencyType","AddTask","setRepeats","repeatType","setRepeatType","setErrors","event","updatedErrors","Object","assign","addTask","Intro","tasksDueToday","tasks","filter","t","tasksNotCompleted","TaskList","uuidv4","addTaskKey","setAddTaskKey","fluid","key","repeatRegularDaysFrequency","repeatRegularDaysArrayDays","sort","a","b","map","task","CustomTooltip","tinycolor","point","serieColor","lighten","toString","y","endsWith","x","withRouter","newTask","startData","endData","window","innerHeight","margin","top","right","bottom","left","xScale","xFormat","yScale","axisTop","axisRight","axisLeft","renderTick","textAnchor","textBaseline","trimWordsOverLength","RegExp","MAX_LINE_LENGTH","groupWordsByLength","splitValues","replace","match","slice","val","i","dy","fontFamily","fontSize","transform","alignmentBaseline","axisBottom","tickRotation","tickPadding","theme","colors","scheme","lineWidth","pointSize","enableGridX","enableGridY","tooltip","useMesh","Point","openFromGraphId","history","push","enableCrosshair","NoTasksGraph","textAlign","Image","src","require","App","document","body","addEventListener","classList","add","keyCode","remove","setTasks","calculatePercentageCompletion","now","valueOf","start","isFinite","updatedTasks","useEffect","path","exact","updatedTask","find","put","delete","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.078e0ed7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Example_Task_Graph.879d9a8f.jpg\";","import React from 'react';\n\nimport './SimpleButton.css';\n\n\nfunction SimpleButton (props) {\n  return (\n    <button className={`simple-button-${props.variant} simple-button btn btn-block mt-3 ${props.disabled ? \"disabled\":\"\"}`} onClick={props.onClick}>{props.children}</button>\n  )\n}\n\n\nexport default SimpleButton;\n","import React, { useState } from 'react';\nimport { Row, Col, Container, Form } from 'react-bootstrap';\nimport SimpleButton from '../ButtonItem/SimpleButton';\nimport axios from 'axios';\n\nimport './Login.css';\n\n\nfunction Login(props) {\n    const [username, setUsername] = useState(\"\");\n    const [newUsername, setNewUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n    const [newUsernameError, setNewUsernameError] = useState(false);\n\n    function handleUsernameChange(e) {\n        setUsername(e.target.value);\n        if (e.target.value.length === 0) {\n            setUsernameError(true)\n        }\n        else { setUsernameError(false) }\n    }\n\n    function handleNewUsernameChange(e) {\n        setNewUsername(e.target.value);\n        if (e.target.value.length === 0) {\n            setNewUsernameError(true)\n        }\n        else { setNewUsernameError(false) }\n    }\n\n    function handleSignInSubmit(e) {\n        e.preventDefault();\n        if (username.length === 0) {\n            setUsernameError(true);\n        }\n        else {\n            axios\n                .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users?username=${username}`)\n                .then(response => {\n                    const userDetails = response.data.user;\n                    if (userDetails.length === 1) {\n                        props.setUserID(response.data.user[0].userID);\n                    }\n                    else {\n                        setUsernameError(true);\n                    }\n                }\n                )\n                .catch(error => {\n                    console.log(\"Error fetching data\", error);\n                })\n        }\n    }\n\n    function handleNewUserSubmit(e) {\n        e.preventDefault();\n        if (newUsername.length === 0) {\n            setNewUsernameError(true);\n        }\n        else {\n            const newUser = { username: newUsername };\n            axios\n                .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users?username=${newUsername}`)\n                .then(response => {\n                    if (response.data.user.length > 0) {\n                        setNewUsernameError(true);\n                        throw new Error(\"User already exists in database, usernames must be unique.\")\n                    }\n                    else {\n                        return axios.post(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users\", newUser);\n                    }\n                })\n                .then(response => {\n                    const newUserID = response.data.newUser[0].userID;\n                    props.setUserID(newUserID);\n                })\n                .catch(error => {\n                    console.log(\"Error fetching data\", error);\n                })\n        }\n    }\n\n    return (\n        <Container className=\"authentication\">\n            <Row className=\"authentication-row px-2\">\n                <Col xs={12} lg={6} className=\"m-auto py-2\">\n                    <Form\n                        className=\"login p-3 pb-4 rounded\"\n                    >\n                        <h1 class=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n                        <Form.Group controlId=\"username\">\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={username}\n                                onChange={handleUsernameChange}\n                            />\n                            {usernameError &&\n                                <Form.Text style={{ color: \"red\" }}>\n                                    Please enter a valid username.\n                            </Form.Text>}\n                        </Form.Group>\n                        <SimpleButton\n                            variant=\"login\"\n                            type=\"submit\"\n                            onClick={handleSignInSubmit}\n                        >Go</SimpleButton>\n                    </Form>\n                </Col>\n                <Col xs={12} lg={6} className=\"m-auto py-2\">\n                    <Form\n                        className=\"new-user p-3 pb-4 rounded\"\n                    >\n                        <h1 class=\"h3 mb-3 font-weight-normal\">Create new user</h1>\n                        <Form.Group controlId=\"new-username\">\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"New Username\"\n                                value={newUsername}\n                                onChange={handleNewUsernameChange}\n                            />\n                            {newUsernameError &&\n                                <Form.Text style={{ color: \"red\" }}>\n                                    Please enter a valid and unique username.\n                            </Form.Text>}\n                        </Form.Group>\n                        <SimpleButton variant=\"new-user\" type=\"submit\" onClick={handleNewUserSubmit}>Go</SimpleButton>\n                    </Form>\n                </Col>\n            </Row>\n\n\n        </Container >\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n\nfunction Header(props) {\n    const [expanded, setExpanded] = useState(false);\n    return (\n        <Navbar className=\"navbar--my-tasks-app\" expand=\"sm\" fixed=\"top\" expanded={expanded}>\n            <Navbar.Brand className=\"brand--my-tasks-app\">My Tasks App</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav onClick={() => setExpanded(false)}>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/\" >Tasks</Link>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/graph\" >Graph</Link>\n                </Nav>\n                {props.userID && <Nav className=\"ml-auto\">                    \n                <SimpleButton variant=\"logout\" onClick={props.handleLogOut}>Log Out</SimpleButton>\n                </Nav>}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Row, Col } from 'react-bootstrap';\n\nimport SimpleButton from '../../ButtonItem/SimpleButton';\n\nfunction TaskBody(props) {\n    return (\n        <Collapse in={props.cardOpen}>\n            <Card.Body tabIndex=\"0\">\n                {!props.completed &&\n                    <Row>\n                        <Col xs={6}>\n                            <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                        <Col xs={6} className=\"col-6 text-right\">\n                            <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                    </Row>}\n                {!!props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n                <Row>\n                    <Col>\n                        <h6>{props.taskDetails}</h6>\n                    </Col>\n                </Row>\n                {!!props.repeats &&\n                    <Row>\n                        <Col>\n                            <h6>This task repeats {props.repeatAfterCompletionFrequency} {props.repeatAfterCompletionFrequency === 1? props.repeatAfterCompletionFrequencyType.substring(0,props.repeatAfterCompletionFrequencyType.length-1):props.repeatAfterCompletionFrequencyType} after being completed.</h6>\n                        </Col>\n                    </Row>\n                }\n                <Row>\n                    {!props.completed && <Col xs={6}>\n                        <SimpleButton onClick={props.handleCompleteClick} variant=\"complete\">Complete task</SimpleButton>\n                    </Col>}\n                    <Col>\n                        <SimpleButton onClick={props.handleDeleteClick} variant=\"delete\">Delete task</SimpleButton>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Collapse>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n\n  function calculateColourRange(width) {\n    let colour1 = \"rgb(0,128,0)\"\n    let colour2, colour3, colourRange;\n\n    if (width <= 50) {\n      let red2 = 255 * width / 50;\n      let green2 = 128 + 127 * width / 50;\n      colour2 = `rgb(${red2},${green2},0)`;\n      colourRange = `${colour1},${colour2}`;\n    }\n\n    if (width >= 50) {\n      let red2 = 255 * width / (2 * 50);\n      let green2 = 128 + 127 * width / (2 * 50);\n      colour2 = `rgb(${red2},${green2},0)`;\n      let green3 = 255 - 255 * (width - 50) / 50;\n      colour3 = `rgb(255,${green3},0)`;\n      colourRange = `${colour1},${colour2},${colour3}`;\n    }\n    return colourRange;\n  }\n\n  function produceStyle(width) {\n    const style = {}\n    if (width < 5) {\n      width = 5;      \n    }\n    style.backgroundImage = `linear-gradient(to right,${calculateColourRange(width)})`;\n    style.width = `${width}%` \n    return style;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={produceStyle(width)} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport { Card, Row, Col, ButtonGroup } from 'react-bootstrap';\n\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../../ButtonItem/ButtonItem';\nimport TaskProgressBar from './TaskProgressBar';\n\n\nfunction TaskHeader(props) {\n\n  function handleHeaderClick() {\n    props.openTaskCard(props.taskID);\n  }\n\n  return (\n    <Card.Header\n      className=\"h4\"\n      aria-controls=\"task-item-contents\"\n      aria-expanded={props.open}\n    >\n      <Row>\n        <Col xs={8}\n          style={{ textDecoration: props.completed ? 'line-through' : '', cursor: \"pointer\" }}\n          tabIndex=\"0\"\n          onClick={handleHeaderClick}\n          onKeyPress={(target) => target.charCode === 13 ? props.openTaskCard(props.taskID) : null}>\n          {props.repeats === 1 && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n        </Col>\n\n        <Col xs={4}>\n          <ButtonGroup className=\"float-right\">\n            {!props.completed &&\n              <ButtonItem onClick={props.handleCompleteClick} aria-label=\"Mark as complete\">\n                <CheckboxIcon squareHeight=\"1.5em\" />\n              </ButtonItem>}\n            <ButtonItem onClick={props.handleDeleteClick} aria-label=\"Delete\">\n              <DeleteIcon squareHeight=\"1.3em\" />\n            </ButtonItem>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n      {!props.completed && <Row>\n        <Col>\n          <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n        </Col>\n      </Row>}\n\n    </Card.Header>\n  );\n}\n\nexport default TaskHeader;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TaskBody from './TaskComponents/TaskBody';\nimport TaskHeader from './TaskComponents/TaskHeader';\n\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n\n  function handleDeleteClick() {\n    props.deleteTask(props.taskID)\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.taskID)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{ backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6' }}>\n      <TaskHeader {...props} open={props.open} setOpen={props.setOpen} handleCompleteClick={handleCompleteClick} handleDeleteClick={handleDeleteClick} openTaskCard={props.openTaskCard}/>\n      <TaskBody {...props} open={props.open} handleDeleteClick={handleDeleteClick} handleCompleteClick={handleCompleteClick} />\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\n\nimport { AddIcon } from '../../ButtonItem/ButtonItem';\nimport { Card} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction AddTaskHeader(props) {\n    return (\n        <Card.Header\n            tabIndex=\"0\"\n            as=\"h4\"\n            aria-controls=\"add-task-contents\"\n            aria-expanded={props.open}\n            style={{cursor: \"pointer\"}}\n            onClick={() => props.setOpen(!props.open)}\n            onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}\n        >\n            <div className=\"row\">\n                <div className=\"col-10 align-self-center\"\n                    >\n                    Add Task\n          </div>\n                <div className=\"col-2\">\n                    <div className=\"float-right\">\n                        <AddIcon squareHeight=\"1.2em\" />\n                    </div>\n                </div>\n            </div>\n        </Card.Header>\n    )\n}\n\nexport default AddTaskHeader;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction NameField(props) {\n  return (\n    <Form.Group controlId=\"formTaskName\">\n      <Form.Control \n        type=\"text\" \n        placeholder={props.errors.name ? \"Input a name for your task\":\"Name your next task\"}\n        onChange={e => props.setName(e.target.value)} \n        style={props.errors.name ? {backgroundColor:\"yellow\"} : null}\n      />\n    </Form.Group>\n  )\n}\n\nexport default NameField;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction TaskDetailsField(props) {\n    return (\n      <Form.Group controlId=\"formTaskDetails\">\n        <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange={e => props.setTaskDetails(e.target.value)} />\n      </Form.Group>\n    )\n}\n\nexport default TaskDetailsField;","import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DatesField(props) {\n  return (\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formStartDate\">\n        <Form.Label>When should you start this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setStartDate(e.target.value)} />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"formEndDate\">\n        <Form.Label>When do you need to finish this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setEndDate(e.target.value)} />\n      </Form.Group>\n    </Form.Row>\n  )\n}\n\nexport default DatesField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DoesNotRepeatField(props) {\n  return (\n    <>\n      {props.errors.repeats && <span className=\"error\">Select whether this task repeats</span>}\n      <Form.Row className=\"customRow\" >\n        <Form.Check defaultChecked type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange={props.handleRadioButton}/>\n        <div className=\"col align-self-center\">\n          <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n        </div>\n      </Form.Row >\n    </>\n  )\n}\n\nexport default DoesNotRepeatField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction RepeatsAfterCompletionField(props) {\n  return (\n    <Form.Row className=\"customRow\">\n      <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"repeatsAfterCompletion\" onChange={props.handleRadioButton} />\n      <div className=\"col-4 col-md-2 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n      </div>\n\n      <div className=\"col-3 col-md-1\">\n        <Form.Control \n          type=\"number\" \n          onChange={e => props.setRepeatAfterCompletionFrequency(e.target.value)} \n          placeholder={props.errors.repeatAfterCompletionFrequency ? \"?\": null}\n          style={props.errors.repeatAfterCompletionFrequency ? {backgroundColor:\"yellow\"} : null}\n        />\n      </div>\n      <div className=\"col-4 col-md-2\">\n        <Form.Control as=\"select\" custom onChange={e => props.setRepeatAfterCompletionFrequencyType(e.target.value)}>\n          <option>days</option>\n          <option>weeks</option>\n          <option>months</option>\n          <option>years</option>\n        </Form.Control>\n\n      </div>\n      <div className=\"col-12 col-md-6 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n      </div>\n    </Form.Row>\n\n  )\n}\n\nexport default RepeatsAfterCompletionField;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Form } from 'react-bootstrap';\n\nimport AddTaskHeader from './FormComponents/AddTaskHeader';\nimport NameField from './FormComponents/NameField';\nimport TaskDetailsField from './FormComponents/TaskDetailsField';\nimport DatesField from './FormComponents/DatesField';\nimport DoesNotRepeatField from './FormComponents/DoesNotRepeatField';\nimport RepeatsAfterCompletionField from './FormComponents/RepeatsAfterCompletionField';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n// import RepeatsRegularDaysField from './FormComponents/RepeatsRegularDaysField';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [repeats, setRepeats] = useState(false);\n  const [repeatType, setRepeatType] = useState(null);\n  const [repeatAfterCompletionFrequency, setRepeatAfterCompletionFrequency] = useState(null);\n  const [repeatAfterCompletionFrequencyType, setRepeatAfterCompletionFrequencyType] = useState(\"days\");\n  // const [repeatRegularDaysFrequency, setRepeatRegularDaysFrequency] = useState(null);\n  // const [repeatRegularDaysArrayDays, setRepeatRegularDaysArrayDays] = useState([false, false, false, false, false, false, false]);\n  const [errors, setErrors] = useState({ name: false, repeatAfterCompletionFrequency: false });\n\n  function handleAddTaskClick() {\n    if (name === \"\" || repeats === null || (repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null)) {\n      const updatedErrors = Object.assign({}, errors);\n      name === \"\" ? updatedErrors.name = true : updatedErrors.name = false;\n      repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null ? updatedErrors.repeatAfterCompletionFrequency = true : updatedErrors.repeatAfterCompletionFrequency = false;\n      setErrors(updatedErrors);\n    }\n    else {\n      props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType,\n        repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType);\n      }\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"repeatsAfterCompletion\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsAfterCompletion\");\n    }\n    else if (event.target.value === \"repeatsRegularDays\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsRegularDays\");\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  // function handleDayCheckboxes(e) {\n  //   repeatRegularDaysArrayDays[e.target.value] = !repeatRegularDaysArrayDays[e.target.value];\n  //   setRepeatRegularDaysArrayDays(repeatRegularDaysArrayDays);\n  // }\n\n  return (\n    <Card className=\"add-task\">\n      <AddTaskHeader open={open} setOpen={setOpen} />\n      <Collapse in={open}>\n        <Card.Body>\n          <Form>\n            <NameField setName={setName} errors={errors} />\n            <TaskDetailsField setTaskDetails={setTaskDetails} />\n            <DatesField setStartDate={setStartDate} setEndDate={setEndDate} />\n            <DoesNotRepeatField errors={errors} handleRadioButton={handleRadioButton} />\n            <RepeatsAfterCompletionField errors={errors} handleRadioButton={handleRadioButton} setRepeatAfterCompletionFrequency={setRepeatAfterCompletionFrequency} setRepeatAfterCompletionFrequencyType={setRepeatAfterCompletionFrequencyType} />\n            {/* <RepeatsRegularDaysField errors={errors} handleRadioButton={handleRadioButton} setRepeatRegularDaysFrequency={setRepeatRegularDaysFrequency} handleDayCheckboxes={handleDayCheckboxes} /> */}\n          </Form>\n          <SimpleButton variant=\"add-task\" onClick={handleAddTaskClick}>Submit Task</SimpleButton> \n          </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks && props.tasks.filter(t=>t.endDate.substring(0,10) === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks && props.tasks.filter(t=>t.completed === 0).length;\n\n    return (\n        <Card.Header className=\"intro\" tabIndex=\"0\">\n            <h4>You have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}</h4>\n        </Card.Header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\n\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    const [addTaskKey, setAddTaskKey] = useState(uuidv4());\n\n    function compare(a, b) {\n        if (a.completed) return 1; // completed tasks come at bottom of list\n        if (!a.completed) return -1;\n        if (a.endDate > b.endDate) return 1; // items ordered by proximity of end date\n        if (a.startDate < b.startDate) return -1;\n        return 0;\n    }\n\n    function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n\n        setAddTaskKey(uuidv4());\n\n        props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n            repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays);\n    }\n\n    return (\n        <Container fluid=\"lg\">\n            <Col>\n                <Row className=\"my-2\">\n                    <Intro tasks={props.tasks} />\n                </Row>\n\n                <Row className=\"my-2\">\n                    <AddTask key={addTaskKey} addTask={addTask} tasks={props.tasks} />\n                </Row>\n\n                {props.tasks && props.tasks.sort(compare).map(task => (\n                    <Row key={task.taskID} id={task.taskID} className=\"my-2\">\n                        <TaskItem completeTask={props.completeTask} deleteTask={props.deleteTask} openTaskCard={props.openTaskCard} {...task} />\n                    </Row>\n                ))}\n            </Col>\n        </Container>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport moment from 'moment';\nimport './CustomTooltip.css';\nimport tinycolor from 'tinycolor2';\n\nfunction CustomTooltip(props) {  \n  return (\n        <div className=\"tooltip--container\" style={{backgroundColor: `${tinycolor(props.point.serieColor).lighten(15).toString()}`}}>\n            {props.point.data.y} <br/>\n            {props.point.id.endsWith(\"0\") && \"Start: \"}            \n            {props.point.id.endsWith(\"1\") && \"Due: \"}\n            {moment(props.point.data.x).format(\"MMM DD\")}\n        </div>\n        )      \n}\n\nexport default CustomTooltip;\n\n\n","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\n\nimport CustomTooltip from './CustomTooltip';\n\nimport './TaskGraph.css';\n\nfunction TaskGraph(props) {\n\n  const theme = {\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\"\n  };\n\n  const data = props.tasks.filter(task => !task.completed).map(task => {\n    let newTask = {};\n    newTask.id = task.taskID;\n    let startData = {};\n    startData.x = moment(task.startDate).format(\"YYYY-MM-DD\");\n    startData.y = task.name;\n    let endData = {};\n    endData.x = moment(task.endDate).format(\"YYYY-MM-DD\");\n    endData.y = task.name;\n    newTask.data = [startData, endData];\n    return newTask;\n  })\n\n  function handleGraphClick(Point) {\n    const id = Point.id.slice(0, -2);\n    props.openFromGraphId(id);\n    props.history.push(\"/\");\n  }\n\n  // Using code from tylercrosse https://github.com/plouc/nivo/issues/353\n  const HorizontalTick = ({ textAnchor, textBaseline, value, x, y }) => {\n    const MAX_LINE_LENGTH = 16;\n    const MAX_LINES = 2;\n    const LENGTH_OF_ELLIPSIS = 3;\n    const TRIM_LENGTH = MAX_LINE_LENGTH * MAX_LINES - LENGTH_OF_ELLIPSIS;\n    const trimWordsOverLength = new RegExp(`^(.{${TRIM_LENGTH}}[^\\\\w]*).*`);\n    const groupWordsByLength = new RegExp(\n      `([^\\\\s].{0,${MAX_LINE_LENGTH}}(?=[\\\\s\\\\W]|$))`,\n      'gm',\n    );\n    const splitValues = value\n      .replace(trimWordsOverLength, '$1...')\n      .match(groupWordsByLength)\n      .slice(0, 2)\n      .map((val, i) => (\n        <tspan\n          key={val}\n          dy={16 * i}\n          x={-15}\n          style={{ fontFamily: \"Verdana, Arial, sans-serif\", fontSize: \"14px\" }}\n        >\n          {val}\n        </tspan>\n      ));\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text alignmentBaseline={textBaseline} textAnchor={textAnchor}>\n          {splitValues}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <Container fluid=\"lg\" style={{ height: window.innerHeight - 125 < 600 ? window.innerHeight - 125 : 600 }}>\n      <ResponsiveLine className=\"graph\" style={{ cursor: \"crosshair\" }}\n        data={data}\n        margin={{ top: 70, right: 20, bottom: 70, left: 150 }}\n        xScale={{\n          type: \"time\",\n          format: \"%Y-%m-%d\"\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{\n          type: \"point\"\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          renderTick: HorizontalTick\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickRotation: -45,\n          tickPadding: 15\n        }}\n        theme={theme}\n        colors={{ scheme: \"accent\" }}\n        lineWidth={20}\n        pointSize={20}\n        enableGridX={true}\n        enableGridY={true}\n        tooltip={CustomTooltip}\n        useMesh={true}\n        onClick={handleGraphClick}\n        enableCrosshair={false}\n      />\n    </Container>\n  );\n}\n\nexport default withRouter(TaskGraph);\n\n\n","import React from 'react';\nimport {Container, Image} from 'react-bootstrap';\n\n\nfunction NoTasksGraph(props) {\n  return (\n    <Container fluid=\"lg\">\n        <h3 style = {{textAlign: \"center\"}}>Start adding tasks to see them displayed here, like the example below.</h3>\n        <Image src={require(`./Example_Task_Graph.jpg`)} fluid/>\n    </Container>\n  );\n}\n\nexport default NoTasksGraph;\n\n\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './Login/Login';\nimport Header from './Header/Header';\nimport TaskList from './TaskList/TaskList';\nimport TaskGraph from './TaskGraph/TaskGraph';\nimport NoTasksGraph from './TaskGraph/NoTasksGraph';\n\nimport './App.css';\n\nfunction App() {\n  // listen for use of mouse\n  document.body.addEventListener('mousedown', function () {\n    document.body.classList.add('using-mouse');\n  });\n\n  // listen for use of tab\n  document.body.addEventListener('keydown', function (event) {\n    if (event.keyCode === 9) {\n      document.body.classList.remove('using-mouse');\n    }\n  });\n\n  const [tasks, setTasks] = useState();\n  const [userID, setUserID] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks?userID=${userID}`)\n      .then(response => {\n        let updatedTasks = response.data.tasks.map(task => {\n          task.percentageCompletion = calculatePercentageCompletion(task.startDate, task.endDate);\n          task.cardOpen = false;\n          return task;\n        })\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }, [userID]);\n\n  function deleteTask(taskID) {\n    axios\n      .delete(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`)\n      .then(response => {\n        const updatedTasks = tasks.filter(task => task.taskID !== taskID);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function calculatePercentageCompletion(startDate, endDate) {\n    const now = moment().valueOf();\n    const start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    const end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n    const percentageCompletion = ((now - start) / (end - start)) * 100;\n    if (percentageCompletion < 0) return 0;\n    return isFinite(percentageCompletion) ? percentageCompletion : 100;\n  }\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n    repeatAfterCompletionFrequencyType) {\n    const newTask = {\n      userID,\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatType,\n      repeatAfterCompletionFrequency,\n      repeatAfterCompletionFrequencyType,\n      completed: false,\n      percentageCompletion: calculatePercentageCompletion(startDate, endDate),\n      cardOpen: false\n    };\n\n    axios\n      .post(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks\", newTask)\n      .then(response => {\n        newTask.taskID = response.data.newTask[0].taskID;\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function completeTask(taskID) {\n    const updatedTask = tasks.find(task => task.taskID === taskID);\n\n    if (!updatedTask.repeats) {\n      updatedTask.completed = true;\n      updatedTask.completeDate = moment().format(\"YYYY-MM-DD\");\n    }\n    else if (updatedTask.repeatType === \"repeatsAfterCompletion\") {\n      updatedTask.endDate = moment().add(updatedTask.repeatAfterCompletionFrequency, updatedTask.repeatAfterCompletionFrequencyType).format(\"YYYY-MM-DD\");\n      updatedTask.startDate = moment().format(\"YYYY-MM-DD\");\n      updatedTask.percentageCompletion = calculatePercentageCompletion(updatedTask.startDate, updatedTask.endDate);\n    }\n\n    axios\n      .put(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`, updatedTask)\n      .then(response => {\n        const updatedTasks = [...tasks].map(task => task.taskID === taskID ? updatedTask : task);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }\n\n  function openTaskCard(taskID) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID === taskID) { task.cardOpen = !task.cardOpen }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  function openFromGraphId(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID.toString() === id) { task.cardOpen = true }\n      else { task.cardOpen = false }\n      return task\n    })\n    setTasks(updatedTasks);\n  }\n\n  function handleLogOut() {\n    setUserID(null);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header handleLogOut={handleLogOut} userID={userID}/>\n        <Switch>\n          {!!userID ?\n            <><Route path=\"/graph\">\n              {(tasks && tasks.length > 0) ? <TaskGraph tasks={tasks} openFromGraphId={openFromGraphId} /> : <NoTasksGraph />}\n            </Route>\n            <Route exact path=\"/\">\n              <TaskList userID={userID} addTask={addTask} completeTask={completeTask} deleteTask={deleteTask} tasks={tasks} openFromGraphId={openFromGraphId} openTaskCard={openTaskCard} />\n            </Route> </>:\n              <Login setUserID={setUserID} />}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}