{"version":3,"sources":["Header/Header.js","TaskItem/TaskComponents/TaskBody.js","ButtonItem/ButtonItem.js","TaskItem/TaskComponents/TaskProgressBar.js","TaskItem/TaskComponents/TaskHeader.js","TaskItem/TaskItem.js","AddTask/FormComponents/AddTaskHeader.js","AddTask/FormComponents/NameField.js","AddTask/FormComponents/TaskDetailsField.js","AddTask/FormComponents/DatesField.js","AddTask/FormComponents/DoesNotRepeatField.js","AddTask/FormComponents/RepeatsAfterCompletionField.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","TaskBody","props","Collapse","in","open","Card","Body","tabIndex","completed","Row","Col","xs","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatAfterCompletionFrequency","repeatAfterCompletionFrequencyType","type","onClick","handleCompleteClick","handleDeleteClick","CheckboxIcon","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","children","TaskProgressBar","percentageCompletion","role","style","backgroundImage","colour2","colour3","colourRange","green2","calculateColourRange","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskHeader","aria-controls","aria-expanded","textDecoration","setOpen","onKeyPress","target","charCode","name","ButtonGroup","OverlayTrigger","placement","overlay","Tooltip","TaskItem","React","useState","deleteTask","id","completeTask","backgroundColor","AddTaskHeader","as","NameField","Form","Group","controlId","Control","placeholder","errors","onChange","e","setName","value","TaskDetailsField","setTaskDetails","DatesField","Label","setStartDate","setEndDate","DoesNotRepeatField","Check","defaultChecked","handleRadioButton","RepeatsAfterCompletionField","setRepeatAfterCompletionFrequency","custom","setRepeatAfterCompletionFrequencyType","AddTask","setRepeats","repeatType","setRepeatType","repeatRegularDaysFrequency","repeatRegularDaysArrayDays","setErrors","event","updatedErrors","Object","assign","addTask","Intro","tasksDueToday","tasks","filter","t","length","tasksNotCompleted","TaskList","uuidv4","addTaskKey","setAddTaskKey","key","sort","a","b","map","task","Footer","App","setTasks","calculatePercentageCompletion","now","valueOf","start","isFinite","Container","fluid","newTask","updatedTasks","add","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.43576528.chunk.js","sourcesContent":["import React from 'react';\n// import ButtonItem, { SettingsIcon } from '../ButtonItem/ButtonItem';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button> */}\n        {/* <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\" style>\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 2</a>\n                </li>\n            </ul>\n        </div> */}\n        <h1 className=\"navbar-brand title\">My Tasks</h1>\n        {/* <ButtonItem>\n            <SettingsIcon squareHeight=\"1.5em\"/>\n        </ButtonItem>   */}\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Row, Col } from 'react-bootstrap';\n\nfunction TaskBody(props) {\n    return (\n        <Collapse in={props.open}>\n            <Card.Body tabIndex=\"0\">\n                {!props.completed &&\n                    <Row>\n                        <Col xs={6}>\n                            <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                        <Col xs={6} className=\"col-6 text-right\">\n                            <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                    </Row>}\n                {props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n                <Row>\n                    <Col>\n                        <h6>{props.taskDetails}</h6>\n                    </Col>\n                </Row>\n                {props.repeats &&\n                    <Row>\n                        <Col>\n                            <h6>This task repeats {props.repeatAfterCompletionFrequency} {props.repeatAfterCompletionFrequencyType} after being completed.</h6>\n                        </Col>\n                    </Row>\n                }\n                <Row>\n                    {!props.completed && <Col xs={6}>\n                        <button type=\"button\" className=\"btn btn-light btn-outline-secondary btn-block mt-3\" onClick={props.handleCompleteClick}>Complete task</button>\n                    </Col>}\n                    <Col>\n                        <button type=\"button\" className=\"btn btn-light btn-outline-secondary btn-block mt-3\" onClick={props.handleDeleteClick}>Delete task</button>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Collapse>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n\n  function calculateColourRange(width) {\n    let colour1 = \"rgb(0,128,0)\"\n    let colour2, colour3, colourRange;\n\n    if (width <= 50) {\n      let red2 = 255 * width / 50;\n      let green2 = 128 + 127 * width / 50;\n      colour2 = `rgb(${red2},${green2},0)`;\n      colourRange = `${colour1},${colour2}`;\n    }\n\n    if (width >= 50) {\n      let red2 = 255 * width / (2 * 50);\n      let green2 = 128 + 127 * width / (2 * 50);\n      colour2 = `rgb(${red2},${green2},0)`;\n      let green3 = 255 - 255 * (width - 50) / 50;\n      colour3 = `rgb(255,${green3},0)`;\n      colourRange = `${colour1},${colour2},${colour3}`;\n    }\n    return colourRange;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={{ backgroundImage: `linear-gradient(to right,${calculateColourRange(width)})`, width: `${width}%` }} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip, Row, Col, ButtonGroup } from 'react-bootstrap';\n\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../../ButtonItem/ButtonItem';\nimport TaskProgressBar from './TaskProgressBar';\n\nfunction TaskHeader(props) {\n  return (\n      <Card.Header\n        tabIndex=\"0\"\n        className=\"h4\"\n        aria-controls=\"task-item-contents\"\n        aria-expanded={props.open}\n      >\n        <Row>\n          <Col xs={8} \n            style={{textDecoration: props.completed ? 'line-through' : ''}} \n            onClick={() => props.setOpen(!props.open)} \n            onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}>\n            {props.repeats && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n          </Col>\n\n          <Col xs={4}>\n            <ButtonGroup className=\"float-right\">\n              {!props.completed &&\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Mark as complete</Tooltip>}>\n                  <ButtonItem onClick={ props.handleCompleteClick } aria-label=\"Mark as complete\">\n                    <CheckboxIcon squareHeight=\"1.5em\" />\n                  </ButtonItem>\n                </OverlayTrigger>}\n\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\n                <ButtonItem onClick={ props.handleDeleteClick } aria-label=\"Delete\">\n                  <DeleteIcon squareHeight=\"1.3em\" />\n                </ButtonItem>\n              </OverlayTrigger>\n            </ButtonGroup>\n          </Col>\n        </Row>\n\n        {!props.completed && <Row>\n          <Col>\n            <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n          </Col>\n        </Row>}\n        \n      </Card.Header>\n  );\n}\n\nexport default TaskHeader;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TaskBody from './TaskComponents/TaskBody';\nimport TaskHeader from './TaskComponents/TaskHeader';\n\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n  const [open, setOpen] = React.useState(false);\n\n  function handleDeleteClick() {\n    props.deleteTask(props.id)\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.id)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{ backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6' }}>\n      <TaskHeader {...props} open={open} setOpen={setOpen} handleCompleteClick={handleCompleteClick} handleDeleteClick={handleDeleteClick} />\n      <TaskBody {...props} open={open} handleDeleteClick={handleDeleteClick} handleCompleteClick={handleCompleteClick} />\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\n\nimport { AddIcon } from '../../ButtonItem/ButtonItem';\nimport { Card} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction AddTaskHeader(props) {\n    return (\n        <Card.Header\n            tabIndex=\"0\"\n            as=\"h4\"\n            aria-controls=\"add-task-contents\"\n            aria-expanded={props.open}\n            onClick={() => props.setOpen(!props.open)}\n        >\n            <div className=\"row\">\n                <div className=\"col-10 align-self-center\"\n                    onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}>\n                    Add Task\n          </div>\n                <div className=\"col-2\">\n                    <div className=\"float-right\">\n                        <AddIcon squareHeight=\"1.2em\" />\n                    </div>\n                </div>\n            </div>\n        </Card.Header>\n    )\n}\n\nexport default AddTaskHeader;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction NameField(props) {\n  return (\n    <Form.Group controlId=\"formTaskName\">\n      <Form.Control \n        type=\"text\" \n        placeholder={props.errors.name ? \"Input a name for your task\":\"Name your next task\"}\n        onChange={e => props.setName(e.target.value)} \n        style={props.errors.name ? {backgroundColor:\"yellow\"} : null}\n      />\n    </Form.Group>\n  )\n}\n\nexport default NameField;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction TaskDetailsField(props) {\n    return (\n      <Form.Group controlId=\"formTaskDetails\">\n        <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange={e => props.setTaskDetails(e.target.value)} />\n      </Form.Group>\n    )\n}\n\nexport default TaskDetailsField;","import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DatesField(props) {\n  return (\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formStartDate\">\n        <Form.Label>When should you start this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setStartDate(e.target.value)} />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"formEndDate\">\n        <Form.Label>When do you need to finish this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setEndDate(e.target.value)} />\n      </Form.Group>\n    </Form.Row>\n  )\n}\n\nexport default DatesField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DoesNotRepeatField(props) {\n  return (\n    <>\n      {props.errors.repeats && <span className=\"error\">Select whether this task repeats</span>}\n      <Form.Row className=\"customRow\" >\n        <Form.Check defaultChecked type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange={props.handleRadioButton}/>\n        <div className=\"col align-self-center\">\n          <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n        </div>\n      </Form.Row >\n    </>\n  )\n}\n\nexport default DoesNotRepeatField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction RepeatsAfterCompletionField(props) {\n  return (\n    <Form.Row className=\"customRow\">\n      <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"repeatsAfterCompletion\" onChange={props.handleRadioButton} />\n      <div className=\"col-4 col-md-2 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n      </div>\n\n      <div className=\"col-3 col-md-1\">\n        <Form.Control \n          type=\"number\" \n          onChange={e => props.setRepeatAfterCompletionFrequency(e.target.value)} \n          placeholder={props.errors.repeatAfterCompletionFrequency ? \"?\": null}\n          style={props.errors.repeatAfterCompletionFrequency ? {backgroundColor:\"yellow\"} : null}\n        />\n      </div>\n      <div className=\"col-4 col-md-2\">\n        <Form.Control as=\"select\" custom onChange={e => props.setRepeatAfterCompletionFrequencyType(e.target.value)}>\n          <option>days</option>\n          <option>weeks</option>\n          <option>months</option>\n          <option>years</option>\n        </Form.Control>\n\n      </div>\n      <div className=\"col-12 col-md-6 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n      </div>\n    </Form.Row>\n\n  )\n}\n\nexport default RepeatsAfterCompletionField;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Form } from 'react-bootstrap';\n\nimport AddTaskHeader from './FormComponents/AddTaskHeader';\nimport NameField from './FormComponents/NameField';\nimport TaskDetailsField from './FormComponents/TaskDetailsField';\nimport DatesField from './FormComponents/DatesField';\nimport DoesNotRepeatField from './FormComponents/DoesNotRepeatField';\nimport RepeatsAfterCompletionField from './FormComponents/RepeatsAfterCompletionField';\n// import RepeatsRegularDaysField from './FormComponents/RepeatsRegularDaysField';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [repeats, setRepeats] = useState(false);\n  const [repeatType, setRepeatType] = useState(null);\n  const [repeatAfterCompletionFrequency, setRepeatAfterCompletionFrequency] = useState(null);\n  const [repeatAfterCompletionFrequencyType, setRepeatAfterCompletionFrequencyType] = useState(\"days\");\n  const [repeatRegularDaysFrequency, setRepeatRegularDaysFrequency] = useState(null);\n  const [repeatRegularDaysArrayDays, setRepeatRegularDaysArrayDays] = useState([false, false, false, false, false, false, false]);\n  const [errors, setErrors] = useState({ name: false, repeatAfterCompletionFrequency: false });\n\n  function handleAddTaskClick() {\n    if (name === \"\" || repeats === null || (repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null)) {\n      const updatedErrors = Object.assign({}, errors);\n      name === \"\" ? updatedErrors.name = true : updatedErrors.name = false;\n      repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null ? updatedErrors.repeatAfterCompletionFrequency = true : updatedErrors.repeatAfterCompletionFrequency = false;\n      setErrors(updatedErrors);\n    }\n    else {\n      props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType,\n        repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType,\n        repeatRegularDaysFrequency,\n        repeatRegularDaysArrayDays);\n      }\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"repeatsAfterCompletion\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsAfterCompletion\");\n    }\n    else if (event.target.value === \"repeatsRegularDays\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsRegularDays\");\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  // function handleDayCheckboxes(e) {\n  //   repeatRegularDaysArrayDays[e.target.value] = !repeatRegularDaysArrayDays[e.target.value];\n  //   setRepeatRegularDaysArrayDays(repeatRegularDaysArrayDays);\n  // }\n\n  return (\n    <Card className=\"add-task\">\n      <AddTaskHeader open={open} setOpen={setOpen} />\n      <Collapse in={open}>\n        <Card.Body>\n          <Form>\n            <NameField setName={setName} errors={errors} />\n            <TaskDetailsField setTaskDetails={setTaskDetails} />\n            <DatesField setStartDate={setStartDate} setEndDate={setEndDate} />\n            <DoesNotRepeatField errors={errors} handleRadioButton={handleRadioButton} />\n            <RepeatsAfterCompletionField errors={errors} handleRadioButton={handleRadioButton} setRepeatAfterCompletionFrequency={setRepeatAfterCompletionFrequency} setRepeatAfterCompletionFrequencyType={setRepeatAfterCompletionFrequencyType} />\n            {/* <RepeatsRegularDaysField errors={errors} handleRadioButton={handleRadioButton} setRepeatRegularDaysFrequency={setRepeatRegularDaysFrequency} handleDayCheckboxes={handleDayCheckboxes} /> */}\n          </Form>\n          <button className=\"btn btn-light btn-outline-secondary btn-block mt-3\" onClick={handleAddTaskClick}>Submit task</button>\n          </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks.filter(t=>t.endDate === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks.filter(t=>t.completed === false).length;\n\n    return (\n        <Card.Header className=\"intro\" tabIndex=\"0\">\n            <h4>You have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}</h4>\n        </Card.Header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\n\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    const [addTaskKey, setAddTaskKey] = useState(uuidv4());\n\n    function compare(a, b) {\n        if (a.completed === true || a.startDate > moment().format(\"YYYY-MM-DD\") || a.endDate > b.endDate) return 1;\n        if (a.endDate < b.endDate || a.startDate < b.startDate) return -1;\n        return 0;\n    }\n\n    function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n\n        setAddTaskKey(uuidv4());\n\n        props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n            repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays);\n    }\n\n    return (\n        <Col>\n            <Row className=\"my-2\">\n                <Intro tasks={props.tasks} />\n            </Row>\n\n            <Row className=\"my-2\">\n                <AddTask key={addTaskKey} addTask={addTask} tasks={props.tasks} />\n                </Row>\n\n            {props.tasks.sort(compare).map(task => (\n                <Row key={task.id} className=\"my-2\">\n                    <TaskItem completeTask={props.completeTask} deleteTask={props.deleteTask} {...task} />\n                </Row>\n            ))}\n\n        </Col>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n    const copy = \"\\u00A9\";\n  return (\n      <footer className=\"block-quote footer\">\n          <div className=\"container\">\n              <span>\n                  {copy} <cite>Saoirse Bryar, 2020</cite>\n              </span>\n              \n          </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport {Container} from 'react-bootstrap';\n\nimport Header from './Header/Header';\nimport TaskList from './TaskList/TaskList';\nimport Footer from './Footer/Footer';\n\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: uuidv4(),\n      name: \"Tidying\",\n      taskDetails: \"Sort through paperwork\",\n      startDate: \"2020-05-06\",\n      endDate: \"2020-08-11\",\n      percentageCompletion: 20,\n      completed: false,\n      repeats: false\n    },\n    {\n      id: uuidv4(),\n      name: \"Cleaning\",\n      taskDetails: \"Clean bathrooms\",\n      startDate: \"2020-05-05\",\n      endDate: \"2020-08-11\",\n      percentageCompletion: 60,\n      completed: false,\n      repeats: true,\n      repeatType: \"repeatsAfterCompletion\",\n      repeatAfterCompletionFrequency: 7,\n      repeatAfterCompletionFrequencyType: \"days\"\n    },\n    {\n      id: uuidv4(),\n      name: \"Hoovering\",\n      taskDetails: \"Downstairs\",\n      startDate: \"2020-04-03\",\n      endDate: \"2020-05-01\",\n      percentageCompletion: 80,\n      completed: true,\n      completeDate: \"2020-04-26\",\n      repeats: false\n    }\n  ]);\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  function calculatePercentageCompletion(startDate, endDate) {\n    const now = moment().valueOf();\n    const start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    const end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n    const percentageCompletion = ((now - start) / (end - start)) * 100;\n    return isFinite(percentageCompletion) ? percentageCompletion : 100;\n  }\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n    repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n    const newTask = {\n      id: uuidv4(),\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatType,\n      repeatAfterCompletionFrequency,\n      repeatAfterCompletionFrequencyType,\n      repeatRegularDaysFrequency,\n      repeatRegularDaysArrayDays,\n      completed: false,\n      percentageCompletion: calculatePercentageCompletion(startDate, endDate)\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n  };\n\n  function completeTask(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        if (task.repeats === false) {\n          task.completed = true\n          task.completeDate = moment().format(\"YYYY-MM-DD\");\n        }\n        else if (task.repeatType === \"repeatsAfterCompletion\") {\n          task.endDate = moment().add(task.repeatAfterCompletionFrequency, task.repeatAfterCompletionFrequencyType).format(\"YYYY-MM-DD\");\n          task.startDate = moment().format(\"YYYY-MM-DD\");\n        }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container fluid=\"lg\">\n        <TaskList addTask={addTask} completeTask={completeTask} deleteTask={deleteTask} tasks={tasks} />\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}