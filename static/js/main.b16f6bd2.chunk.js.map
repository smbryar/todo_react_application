{"version":3,"sources":["Header/Header.js","ButtonItem/ButtonItem.js","TaskProgressBar/TaskProgressBar.js","TaskItem/TaskItem.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","DetailDisplay/DetailDisplay.js","TaskDisplay/TaskDisplay.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CheckboxIcon","props","class","width","squareHeight","height","viewBox","fill","xmlns","fill-rule","d","clip-rule","DeleteIcon","AddIcon","ButtonItem","type","title","hoverText","children","TaskProgressBar","ProgressBar","now","percentageCompletion","TaskItem","React","useState","open","setOpen","Card","onClick","aria-controls","aria-expanded","name","Collapse","in","Body","startDate","endDate","taskDetails","AddTask","as","id","Form","Group","controlId","Label","Control","placeholder","Row","Check","custom","map","day","key","inline","label","Intro","TaskList","completed","task","DetailDisplay","TaskDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b16f6bd2.chunk.js","sourcesContent":["import React from 'react';\n// import ButtonItem, { SettingsIcon } from '../ButtonItem/ButtonItem';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button> */}\n        {/* <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\" style>\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 2</a>\n                </li>\n            </ul>\n        </div> */}\n        <h1 className=\"navbar-brand title\">My Tasks</h1>\n        {/* <ButtonItem>\n            <SettingsIcon squareHeight=\"1.5em\"/>\n        </ButtonItem>   */}\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './ButtonItem.css';\n\nfunction ButtonItem(props) {\n  return (\n    <div className=\"button-item\">\n      <button type={props.type} className=\"btn\" title={props.hoverText}>{props.children}</button>\n    </div>\n  );\n}\n\nexport function CheckboxIcon(props) {\n  return (\n    <svg class=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clip-rule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg class=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clip-rule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function SettingsIcon(props) {\n  return (\n    <svg className=\"bi bi-gear\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\" fill=\"white\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M8.837 1.626c-.246-.835-1.428-.835-1.674 0l-.094.319A1.873 1.873 0 014.377 3.06l-.292-.16c-.764-.415-1.6.42-1.184 1.185l.159.292a1.873 1.873 0 01-1.115 2.692l-.319.094c-.835.246-.835 1.428 0 1.674l.319.094a1.873 1.873 0 011.115 2.693l-.16.291c-.415.764.42 1.6 1.185 1.184l.292-.159a1.873 1.873 0 012.692 1.116l.094.318c.246.835 1.428.835 1.674 0l.094-.319a1.873 1.873 0 012.693-1.115l.291.16c.764.415 1.6-.42 1.184-1.185l-.159-.291a1.873 1.873 0 011.116-2.693l.318-.094c.835-.246.835-1.428 0-1.674l-.319-.094a1.873 1.873 0 01-1.115-2.692l.16-.292c.415-.764-.42-1.6-1.185-1.184l-.291.159A1.873 1.873 0 018.93 1.945l-.094-.319zm-2.633-.283c.527-1.79 3.065-1.79 3.592 0l.094.319a.873.873 0 001.255.52l.292-.16c1.64-.892 3.434.901 2.54 2.541l-.159.292a.873.873 0 00.52 1.255l.319.094c1.79.527 1.79 3.065 0 3.592l-.319.094a.873.873 0 00-.52 1.255l.16.292c.893 1.64-.902 3.434-2.541 2.54l-.292-.159a.873.873 0 00-1.255.52l-.094.319c-.527 1.79-3.065 1.79-3.592 0l-.094-.319a.873.873 0 00-1.255-.52l-.292.16c-1.64.893-3.433-.902-2.54-2.541l.159-.292a.873.873 0 00-.52-1.255l-.319-.094c-1.79-.527-1.79-3.065 0-3.592l.319-.094a.873.873 0 00.52-1.255l-.16-.292c-.892-1.64.902-3.433 2.541-2.54l.292.159a.873.873 0 001.255-.52l.094-.319z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M8 5.754a2.246 2.246 0 100 4.492 2.246 2.246 0 000-4.492zM4.754 8a3.246 3.246 0 116.492 0 3.246 3.246 0 01-6.492 0z\"\n        clip-rule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg class=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clip-rule=\"evenodd\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clip-rule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './TaskProgressBar.css';\n\nfunction TaskProgressBar(props) {\n  return (\n    <ProgressBar \n    // min={props.startDate.getTime()} \n    // max = {props.endDate.getTime()} \n    // now={Date.now()}\n    now={props.percentageCompletion} />\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport ButtonItem, { CheckboxIcon, DeleteIcon } from '../ButtonItem/ButtonItem';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Card from 'react-bootstrap/Card';\nimport TaskProgressBar from '../TaskProgressBar/TaskProgressBar';\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Card className=\"task-item\">\n      <Card.Header\n        className=\"h4\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"task-item-contents\"\n        aria-expanded={open}\n      >\n        <div className=\"row\">\n          <div className=\"col-8\">\n            {props.name}\n          </div>\n          <div className=\"col-4\">\n            <div className=\"btn-group float-right\">\n              <ButtonItem hoverText=\"Mark as complete\">\n                <CheckboxIcon squareHeight=\"1.5em\" />\n              </ButtonItem>\n              <ButtonItem hoverText=\"Delete\">\n                <DeleteIcon squareHeight=\"1.3em\" />\n              </ButtonItem>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <TaskProgressBar percentageCompletion={props.percentageCompletion}/>\n          </div>\n        </div>\n      </Card.Header>\n\n    <Collapse in={open}>\n      <Card.Body>\n        <div className=\"row\">\n          <div class=\"col-6\">\n            <h5>Start: {props.startDate}</h5>\n          </div>\n          <div class=\"col-6 text-right\">\n            <h5>Due: {props.endDate}</h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div class=\"col\">\n            <h6>{props.taskDetails}</h6>\n          </div>\n        </div>\n      </Card.Body>\n    </Collapse>\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\nimport ButtonItem, { AddIcon } from '../ButtonItem/ButtonItem';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Card className=\"add-task\">\n      <Card.Header\n        as=\"h4\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"add-task-contents\"\n        aria-expanded={open}\n      >\n        Add Task\n    </Card.Header>\n\n      <Collapse in={open}>\n        <Card.Body>\n          <div id=\"add-task-contents\">\n            <div className=\"row\">\n\n              <div className=\"col-10\">\n                <Form>\n                  <Form.Group controlId=\"formTaskName\">\n                    <Form.Label>Add new task</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Name your next task\" />\n                  </Form.Group>\n                </Form>\n              </div>\n\n              <div className=\"col-2\">\n                <div className=\"float-right\">\n                  <ButtonItem type=\"submit\" hoverText=\"Add Task\">\n                    <AddIcon squareHeight=\"2em\" />\n                  </ButtonItem>\n                </div>\n              </div>\n\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <Form>\n                  <Form.Group controlId=\"formStartDate\">\n                    <Form.Label>Start date</Form.Label>\n                    <Form.Control type=\"date\" />\n                  </Form.Group>\n                </Form>\n              </div>\n              <div className=\"col-6\">\n                <Form>\n                  <Form.Group controlId=\"formEndDate\">\n                    <Form.Label>End date</Form.Label>\n                    <Form.Control type=\"date\" />\n                  </Form.Group>\n                </Form>\n              </div>\n            </div>\n          </div>\n\n          <Form>\n            <Form.Row className=\"customRow\">\n              <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" />\n              <div className=\"col align-self-center\">\n                <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n              </div>              \n            </Form.Row>\n\n            <Form.Row className=\"customRow\">\n              <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\"/>\n              <div className=\"col-4 col-md-2 align-self-center\">\n                <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n              </div>\n\n              <div className=\"col-3 col-md-1\">\n                <Form.Control type=\"number\" />\n              </div>\n              <div className=\"col-4 col-md-2\">\n                <Form.Control as=\"select\" custom>\n                  <option>days</option>\n                  <option>weeks</option>\n                  <option>months</option>\n                  <option>years</option>\n                </Form.Control>\n\n              </div>\n              <div className=\"col-12 col-md-6 align-self-center\">\n              <Form.Label className=\"noBottonMargin\">after the task has been completed.</Form.Label>\n              </div>\n              \n            </Form.Row>\n            <Form.Row className=\"customRow\">\n              <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\"/>\n              <div className=\"col-4 col-md-2 align-self-center\">\n                <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n              </div>              \n              <div className=\"col-3 col-md-1\">\n                <Form.Control type=\"number\" />\n              </div>\n              <div className=\"col-4 col-md-2 align-self-center\">\n                <Form.Label className=\"noBottonMargin\">weeks on</Form.Label>\n              </div>\n              <div className=\"col-12 col-md-6 align-self-center\">\n                <div className=\"row\">\n                  {[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"].map(day => (\n                <div key=\"inline-checkbox\">\n                  <Form.Check inline label={day} />\n                </div>\n              ))}\n                </div>\n                \n              </div>              \n              \n\n            </Form.Row>\n\n\n          </Form>\n\n        </Card.Body>\n\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport './Intro.css';\n\nfunction Intro() {\n    return (\n        <div className=\"card-header rounded intro\">\n            <h4>You have n tasks to complete today out of n unfinished tasks.</h4>\n        </div>\n    );\n}\n\nexport default Intro;\n","import React from 'react';\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\nimport './TaskList.css';\n\nfunction TaskList() {\n    let tasks = [{ name: \"Tidying\", taskDetails: \"Sort through paperwork\", startDate: \"03/06/2020\", endDate: \"10/06/2020\", percentageCompletion: 60, completed: false }, { name: \"Cleaning\", taskDetails:\"Clean bathrooms\", startDate: \"03/06/2020\", endDate: \"10/06/2020\", percentageCompletion: 80, completed: false }, { name: \"Hoovering\", taskDetails:\"Downstairs\", startDate: \"03/06/2020\", endDate: \"10/06/2020\", percentageCompletion: 80, completed: true }];\n    return (\n        <div className=\"col-12 col-lg-6\">\n            <div className=\"mx-2\">\n                \n                <div className=\"row my-2\">\n                    <Intro />\n                </div>\n\n                <div className=\"row my-2\">\n                    <AddTask />\n                </div>\n\n\n                {tasks.map(task => (\n                    <div className=\"row my-2\">\n                        <TaskItem {...task} />\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport './DetailDisplay.css';\n\nfunction DetailDisplay() {\n    return (\n        <div className=\"d-none d-lg-block col-lg-6 \">\n            <div className=\"mx-2\">\n                <div className=\"row my-2\">\n                    <div className=\"card-header rounded detail-display\">\n                        <h4>Side detail display.</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DetailDisplay;\n","import React from 'react';\nimport './TaskDisplay.css';\nimport TaskList from '../TaskList/TaskList';\nimport DetailDisplay from '../DetailDisplay/DetailDisplay';\n\nfunction TaskDisplay() {\n  return (\n    <main className=\"container-fluid\">\n        <div className=\"row\">\n            <TaskList/>\n            <DetailDisplay/>\n        </div>\n    </main>\n  );\n}\n\nexport default TaskDisplay;\n","import React from 'react';\nimport Header from './Header/Header';\nimport TaskDisplay from './TaskDisplay/TaskDisplay';\nimport './App.css';\n\nfunction App() {  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <TaskDisplay/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}