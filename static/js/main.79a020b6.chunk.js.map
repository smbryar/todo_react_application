{"version":3,"sources":["TaskGraph/Example_Task_Graph.jpg","ButtonItem/SimpleButton.js","Login/Login.js","Header/Header.js","TaskItem/TaskComponents/TaskBody.js","ButtonItem/ButtonItem.js","TaskItem/TaskComponents/TaskProgressBar.js","TaskItem/TaskComponents/TaskHeader.js","TaskItem/TaskItem.js","AddTask/FormComponents/AddTaskHeader.js","AddTask/FormComponents/NameField.js","AddTask/FormComponents/TaskDetailsField.js","AddTask/FormComponents/DatesField.js","AddTask/FormComponents/DoesNotRepeatField.js","AddTask/FormComponents/RepeatsAfterCompletionField.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","TaskGraph/CustomTooltip.js","TaskGraph/TaskGraph.js","TaskGraph/NoTasksGraph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleButton","props","className","variant","disabled","onClick","children","Login","useState","username","setUsername","newUsername","setNewUsername","usernameError","setUsernameError","newUsernameError","setNewUsernameError","Container","Row","Col","xs","lg","Form","Group","controlId","Control","autoFocus","required","type","placeholder","value","onChange","e","target","length","Text","style","color","preventDefault","axios","get","then","response","data","user","setUser","userID","catch","error","console","log","newUser","Error","post","newUserID","Header","expanded","setExpanded","Navbar","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","to","handleLogOut","TaskBody","in","cardOpen","Card","Body","tabIndex","completed","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatAfterCompletionFrequency","repeatAfterCompletionFrequencyType","substring","handleCompleteClick","handleDeleteClick","CheckboxIcon","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","TaskProgressBar","percentageCompletion","role","backgroundImage","colour2","colour3","colourRange","green2","calculateColourRange","produceStyle","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskHeader","aria-expanded","open","textDecoration","cursor","openTaskCard","taskID","onKeyPress","charCode","name","ButtonGroup","TaskItem","deleteTask","completeTask","backgroundColor","setOpen","AddTaskHeader","as","NameField","errors","setName","TaskDetailsField","setTaskDetails","DatesField","Label","setStartDate","setEndDate","DoesNotRepeatField","Check","defaultChecked","handleRadioButton","RepeatsAfterCompletionField","setRepeatAfterCompletionFrequency","custom","setRepeatAfterCompletionFrequencyType","AddTask","setRepeats","repeatType","setRepeatType","setErrors","event","updatedErrors","Object","assign","addTask","Intro","tasksDueToday","tasks","filter","t","tasksNotCompleted","TaskList","uuidv4","addTaskKey","setAddTaskKey","fluid","key","repeatRegularDaysFrequency","repeatRegularDaysArrayDays","sort","a","b","isAfter","map","task","CustomTooltip","tinycolor","point","serieColor","lighten","toString","y","endsWith","x","withRouter","newTask","startData","endData","window","innerHeight","margin","top","right","bottom","left","xScale","xFormat","yScale","axisTop","axisRight","axisLeft","renderTick","textAnchor","textBaseline","trimWordsOverLength","RegExp","MAX_LINE_LENGTH","groupWordsByLength","splitValues","replace","match","slice","val","i","dy","fontFamily","fontSize","transform","alignmentBaseline","axisBottom","tickRotation","tickPadding","theme","colors","scheme","lineWidth","pointSize","enableGridX","enableGridY","tooltip","useMesh","Point","openFromGraphId","history","push","enableCrosshair","NoTasksGraph","textAlign","Image","src","require","App","document","body","addEventListener","classList","add","keyCode","remove","setTasks","calculatePercentageCompletion","now","valueOf","start","isFinite","updatedTasks","useEffect","path","exact","updatedTask","find","put","delete","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.79a020b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Example_Task_Graph.879d9a8f.jpg\";","import React from 'react';\n\nimport './SimpleButton.css';\n\n\nfunction SimpleButton (props) {\n  return (\n    <button className={`simple-button-${props.variant} simple-button btn btn-block mt-3 ${props.disabled ? \"disabled\":\"\"}`} onClick={props.onClick}>{props.children}</button>\n  )\n}\n\n\nexport default SimpleButton;\n","import React, { useState } from 'react';\nimport { Row, Col, Container, Form } from 'react-bootstrap';\nimport SimpleButton from '../ButtonItem/SimpleButton';\nimport axios from 'axios';\n\nimport './Login.css';\n\n\nfunction Login(props) {\n    const [username, setUsername] = useState(\"\");\n    const [newUsername, setNewUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n    const [newUsernameError, setNewUsernameError] = useState(false);\n\n    function handleUsernameChange(e) {\n        setUsername(e.target.value);\n        if (e.target.value.length === 0) {\n            setUsernameError(true)\n        }\n        else { setUsernameError(false) }\n    }\n\n    function handleNewUsernameChange(e) {\n        setNewUsername(e.target.value);\n        if (e.target.value.length === 0) {\n            setNewUsernameError(true)\n        }\n        else { setNewUsernameError(false) }\n    }\n\n    function handleSignInSubmit(e) {\n        e.preventDefault();\n        if (username.length === 0) {\n            setUsernameError(true);\n        }\n        else {\n            axios\n                .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users?username=${username}`)\n                .then(response => {\n                    const userDetails = response.data.user;\n                    if (userDetails.length === 1) {\n                        props.setUser({userID:response.data.user[0].userID, username});\n                    }\n                    else {\n                        setUsernameError(true);\n                    }\n                }\n                )\n                .catch(error => {\n                    console.log(\"Error fetching data\", error);\n                })\n        }\n    }\n\n    function handleNewUserSubmit(e) {\n        e.preventDefault();\n        if (newUsername.length === 0) {\n            setNewUsernameError(true);\n        }\n        else {\n            const newUser = { username: newUsername };\n            axios\n                .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users?username=${newUsername}`)\n                .then(response => {\n                    if (response.data.user.length > 0) {\n                        setNewUsernameError(true);\n                        throw new Error(\"User already exists in database, usernames must be unique.\")\n                    }\n                    else {\n                        return axios.post(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/users\", newUser);\n                    }\n                })\n                .then(response => {\n                    const newUserID = response.data.newUser[0].userID;\n                    props.setUser({userID:newUserID, username:newUsername});\n                })\n                .catch(error => {\n                    console.log(\"Error fetching data\", error);\n                })\n        }\n    }\n\n    return (\n        <Container className=\"authentication\">\n            <Row className=\"authentication-row px-2\">\n                <Col xs={12} lg={6} className=\"m-auto py-2\">\n                    <Form\n                        className=\"login p-3 pb-4 rounded\"\n                    >\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n                        <Form.Group controlId=\"username\">\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={username}\n                                onChange={handleUsernameChange}\n                            />\n                            {usernameError &&\n                                <Form.Text style={{ color: \"red\" }}>\n                                    Please enter a valid username.\n                            </Form.Text>}\n                        </Form.Group>\n                        <SimpleButton\n                            variant=\"login\"\n                            type=\"submit\"\n                            onClick={handleSignInSubmit}\n                        >Go</SimpleButton>\n                    </Form>\n                </Col>\n                <Col xs={12} lg={6} className=\"m-auto py-2\">\n                    <Form\n                        className=\"new-user p-3 pb-4 rounded\"\n                    >\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Create new user</h1>\n                        <Form.Group controlId=\"new-username\">\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"New Username\"\n                                value={newUsername}\n                                onChange={handleNewUsernameChange}\n                            />\n                            {newUsernameError &&\n                                <Form.Text style={{ color: \"red\" }}>\n                                    Please enter a valid and unique username.\n                            </Form.Text>}\n                        </Form.Group>\n                        <SimpleButton variant=\"new-user\" type=\"submit\" onClick={handleNewUserSubmit}>Go</SimpleButton>\n                    </Form>\n                </Col>\n            </Row>\n\n\n        </Container >\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n\nfunction Header(props) {\n    const [expanded, setExpanded] = useState(false);\n    return (\n        <Navbar className=\"navbar--my-tasks-app\" expand=\"sm\" fixed=\"top\" expanded={expanded}>\n            <Navbar.Brand className=\"brand--my-tasks-app\">My Tasks App</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav onClick={() => setExpanded(false)}>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/todo_react_application/\" >Tasks</Link>\n                    <Link className=\"px-3 navlink--my-tasks-app\" to=\"/todo_react_application/graph\" >Graph</Link>\n                </Nav>\n                {props.userID && <Nav className=\"ml-auto\">                    \n                <SimpleButton variant=\"logout\" onClick={props.handleLogOut}>Log Out</SimpleButton>\n                </Nav>}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Row, Col } from 'react-bootstrap';\n\nimport SimpleButton from '../../ButtonItem/SimpleButton';\n\nfunction TaskBody(props) {\n    return (\n        <Collapse in={props.cardOpen}>\n            <Card.Body tabIndex=\"0\">\n                {!props.completed &&\n                    <Row>\n                        <Col xs={6}>\n                            <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                        <Col xs={6} className=\"col-6 text-right\">\n                            <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                    </Row>}\n                {!!props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n                <Row>\n                    <Col>\n                        <h6>{props.taskDetails}</h6>\n                    </Col>\n                </Row>\n                {!!props.repeats &&\n                    <Row>\n                        <Col>\n                            <h6>This task repeats {props.repeatAfterCompletionFrequency} {props.repeatAfterCompletionFrequency === 1? props.repeatAfterCompletionFrequencyType.substring(0,props.repeatAfterCompletionFrequencyType.length-1):props.repeatAfterCompletionFrequencyType} after being completed.</h6>\n                        </Col>\n                    </Row>\n                }\n                <Row>\n                    {!props.completed && <Col xs={6}>\n                        <SimpleButton onClick={props.handleCompleteClick} variant=\"complete\">Complete task</SimpleButton>\n                    </Col>}\n                    <Col>\n                        <SimpleButton onClick={props.handleDeleteClick} variant=\"delete\">Delete task</SimpleButton>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Collapse>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n\n  function calculateColourRange(width) {\n    let colour1 = \"rgb(0,128,0)\"\n    let colour2, colour3, colourRange;\n\n    if (width <= 50) {\n      let red2 = 255 * width / 50;\n      let green2 = 128 + 127 * width / 50;\n      colour2 = `rgb(${red2},${green2},0)`;\n      colourRange = `${colour1},${colour2}`;\n    }\n\n    if (width >= 50) {\n      let red2 = 255 * width / (2 * 50);\n      let green2 = 128 + 127 * width / (2 * 50);\n      colour2 = `rgb(${red2},${green2},0)`;\n      let green3 = 255 - 255 * (width - 50) / 50;\n      colour3 = `rgb(255,${green3},0)`;\n      colourRange = `${colour1},${colour2},${colour3}`;\n    }\n    return colourRange;\n  }\n\n  function produceStyle(width) {\n    const style = {}\n    if (width < 5) {\n      width = 5;      \n    }\n    style.backgroundImage = `linear-gradient(to right,${calculateColourRange(width)})`;\n    style.width = `${width}%` \n    return style;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={produceStyle(width)} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport { Card, Row, Col, ButtonGroup } from 'react-bootstrap';\n\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../../ButtonItem/ButtonItem';\nimport TaskProgressBar from './TaskProgressBar';\n\n\nfunction TaskHeader(props) {\n\n  function handleHeaderClick() {\n    props.openTaskCard(props.taskID);\n  }\n\n  return (\n    <Card.Header\n      className=\"h4\"\n      aria-controls=\"task-item-contents\"\n      aria-expanded={props.open}\n    >\n      <Row>\n        <Col xs={8}\n          style={{ textDecoration: props.completed ? 'line-through' : '', cursor: \"pointer\" }}\n          tabIndex=\"0\"\n          onClick={handleHeaderClick}\n          onKeyPress={(target) => target.charCode === 13 ? props.openTaskCard(props.taskID) : null}>\n          {props.repeats === 1 && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n        </Col>\n\n        <Col xs={4}>\n          <ButtonGroup className=\"float-right\">\n            {!props.completed &&\n              <ButtonItem onClick={props.handleCompleteClick} aria-label=\"Mark as complete\">\n                <CheckboxIcon squareHeight=\"1.5em\" />\n              </ButtonItem>}\n            <ButtonItem onClick={props.handleDeleteClick} aria-label=\"Delete\">\n              <DeleteIcon squareHeight=\"1.3em\" />\n            </ButtonItem>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n      {!props.completed && <Row>\n        <Col>\n          <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n        </Col>\n      </Row>}\n\n    </Card.Header>\n  );\n}\n\nexport default TaskHeader;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TaskBody from './TaskComponents/TaskBody';\nimport TaskHeader from './TaskComponents/TaskHeader';\n\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n\n  function handleDeleteClick() {\n    props.deleteTask(props.taskID)\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.taskID)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{ backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6' }}>\n      <TaskHeader {...props} open={props.open} setOpen={props.setOpen} handleCompleteClick={handleCompleteClick} handleDeleteClick={handleDeleteClick} openTaskCard={props.openTaskCard}/>\n      <TaskBody {...props} open={props.open} handleDeleteClick={handleDeleteClick} handleCompleteClick={handleCompleteClick} />\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\n\nimport { AddIcon } from '../../ButtonItem/ButtonItem';\nimport { Card} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction AddTaskHeader(props) {\n    return (\n        <Card.Header\n            tabIndex=\"0\"\n            as=\"h4\"\n            aria-controls=\"add-task-contents\"\n            aria-expanded={props.open}\n            style={{cursor: \"pointer\"}}\n            onClick={() => props.setOpen(!props.open)}\n            onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}\n        >\n            <div className=\"row\">\n                <div className=\"col-10 align-self-center\"\n                    >\n                    Add Task\n          </div>\n                <div className=\"col-2\">\n                    <div className=\"float-right\">\n                        <AddIcon squareHeight=\"1.2em\" />\n                    </div>\n                </div>\n            </div>\n        </Card.Header>\n    )\n}\n\nexport default AddTaskHeader;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction NameField(props) {\n  return (\n    <Form.Group controlId=\"formTaskName\">\n      <Form.Control \n        type=\"text\" \n        placeholder={props.errors.name ? \"Input a name for your task\":\"Name your next task\"}\n        onChange={e => props.setName(e.target.value)} \n        style={props.errors.name ? {backgroundColor:\"yellow\"} : null}\n      />\n    </Form.Group>\n  )\n}\n\nexport default NameField;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction TaskDetailsField(props) {\n    return (\n      <Form.Group controlId=\"formTaskDetails\">\n        <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange={e => props.setTaskDetails(e.target.value)} />\n      </Form.Group>\n    )\n}\n\nexport default TaskDetailsField;","import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DatesField(props) {\n  return (\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formStartDate\">\n        <Form.Label>When should you start this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setStartDate(e.target.value)} />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"formEndDate\">\n        <Form.Label>When do you need to finish this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setEndDate(e.target.value)} />\n      </Form.Group>\n    </Form.Row>\n  )\n}\n\nexport default DatesField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DoesNotRepeatField(props) {\n  return (\n    <>\n      {props.errors.repeats && <span className=\"error\">Select whether this task repeats</span>}\n      <Form.Row className=\"customRow\" >\n        <Form.Check defaultChecked type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange={props.handleRadioButton}/>\n        <div className=\"col align-self-center\">\n          <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n        </div>\n      </Form.Row >\n    </>\n  )\n}\n\nexport default DoesNotRepeatField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction RepeatsAfterCompletionField(props) {\n  return (\n    <Form.Row className=\"customRow\">\n      <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"repeatsAfterCompletion\" onChange={props.handleRadioButton} />\n      <div className=\"col-4 col-md-2 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n      </div>\n\n      <div className=\"col-3 col-md-1\">\n        <Form.Control \n          type=\"number\" \n          onChange={e => props.setRepeatAfterCompletionFrequency(e.target.value)} \n          placeholder={props.errors.repeatAfterCompletionFrequency ? \"?\": null}\n          style={props.errors.repeatAfterCompletionFrequency ? {backgroundColor:\"yellow\"} : null}\n        />\n      </div>\n      <div className=\"col-4 col-md-2\">\n        <Form.Control as=\"select\" custom onChange={e => props.setRepeatAfterCompletionFrequencyType(e.target.value)}>\n          <option>days</option>\n          <option>weeks</option>\n          <option>months</option>\n          <option>years</option>\n        </Form.Control>\n\n      </div>\n      <div className=\"col-12 col-md-6 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n      </div>\n    </Form.Row>\n\n  )\n}\n\nexport default RepeatsAfterCompletionField;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Form } from 'react-bootstrap';\n\nimport AddTaskHeader from './FormComponents/AddTaskHeader';\nimport NameField from './FormComponents/NameField';\nimport TaskDetailsField from './FormComponents/TaskDetailsField';\nimport DatesField from './FormComponents/DatesField';\nimport DoesNotRepeatField from './FormComponents/DoesNotRepeatField';\nimport RepeatsAfterCompletionField from './FormComponents/RepeatsAfterCompletionField';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n// import RepeatsRegularDaysField from './FormComponents/RepeatsRegularDaysField';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [repeats, setRepeats] = useState(false);\n  const [repeatType, setRepeatType] = useState(null);\n  const [repeatAfterCompletionFrequency, setRepeatAfterCompletionFrequency] = useState(null);\n  const [repeatAfterCompletionFrequencyType, setRepeatAfterCompletionFrequencyType] = useState(\"days\");\n  // const [repeatRegularDaysFrequency, setRepeatRegularDaysFrequency] = useState(null);\n  // const [repeatRegularDaysArrayDays, setRepeatRegularDaysArrayDays] = useState([false, false, false, false, false, false, false]);\n  const [errors, setErrors] = useState({ name: false, repeatAfterCompletionFrequency: false });\n\n  function handleAddTaskClick() {\n    if (name === \"\" || repeats === null || (repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null)) {\n      const updatedErrors = Object.assign({}, errors);\n      name === \"\" ? updatedErrors.name = true : updatedErrors.name = false;\n      repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null ? updatedErrors.repeatAfterCompletionFrequency = true : updatedErrors.repeatAfterCompletionFrequency = false;\n      setErrors(updatedErrors);\n    }\n    else {\n      props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType,\n        repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType);\n      }\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"repeatsAfterCompletion\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsAfterCompletion\");\n    }\n    else if (event.target.value === \"repeatsRegularDays\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsRegularDays\");\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  // function handleDayCheckboxes(e) {\n  //   repeatRegularDaysArrayDays[e.target.value] = !repeatRegularDaysArrayDays[e.target.value];\n  //   setRepeatRegularDaysArrayDays(repeatRegularDaysArrayDays);\n  // }\n\n  return (\n    <Card className=\"add-task\">\n      <AddTaskHeader open={open} setOpen={setOpen} />\n      <Collapse in={open}>\n        <Card.Body>\n          <Form>\n            <NameField setName={setName} errors={errors} />\n            <TaskDetailsField setTaskDetails={setTaskDetails} />\n            <DatesField setStartDate={setStartDate} setEndDate={setEndDate} />\n            <DoesNotRepeatField errors={errors} handleRadioButton={handleRadioButton} />\n            <RepeatsAfterCompletionField errors={errors} handleRadioButton={handleRadioButton} setRepeatAfterCompletionFrequency={setRepeatAfterCompletionFrequency} setRepeatAfterCompletionFrequencyType={setRepeatAfterCompletionFrequencyType} />\n            {/* <RepeatsRegularDaysField errors={errors} handleRadioButton={handleRadioButton} setRepeatRegularDaysFrequency={setRepeatRegularDaysFrequency} handleDayCheckboxes={handleDayCheckboxes} /> */}\n          </Form>\n          <SimpleButton variant=\"add-task\" onClick={handleAddTaskClick}>Submit Task</SimpleButton> \n          </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks && props.tasks.filter(t=>!t.completed && t.endDate.substring(0,10) === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks && props.tasks.filter(t=>t.completed === 0).length;\n\n    return (\n        <Card.Header className=\"intro\" tabIndex=\"0\">\n            <h4>Hello {props.username}, you have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}</h4>\n        </Card.Header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\n\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\n\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    const [addTaskKey, setAddTaskKey] = useState(uuidv4());\n\n    function compare(a, b) {\n        if (a.completed) return 1; // completed tasks come at bottom of list\n        if (moment(a.endDate).isAfter(b.endDate)) return 1; // items ordered by proximity of end date\n        if (moment(b.endDate).isAfter(a.endDate)) return -1;\n        return 0;\n    }\n\n    function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n\n        setAddTaskKey(uuidv4());\n\n        props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n            repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays);\n    }\n\n    return (\n        <Container fluid=\"lg\">\n            <Col>\n                <Row className=\"my-2\">\n                    <Intro tasks={props.tasks} username={props.username}/>\n                </Row>\n\n                <Row className=\"my-2\">\n                    <AddTask key={addTaskKey} addTask={addTask} tasks={props.tasks} />\n                </Row>\n\n                {props.tasks && props.tasks.sort(compare).map(task => (\n                    <Row key={task.taskID} id={task.taskID} className=\"my-2\">\n                        <TaskItem completeTask={props.completeTask} deleteTask={props.deleteTask} openTaskCard={props.openTaskCard} {...task} />\n                    </Row>\n                ))}\n            </Col>\n        </Container>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport moment from 'moment';\nimport './CustomTooltip.css';\nimport tinycolor from 'tinycolor2';\n\nfunction CustomTooltip(props) {  \n  return (\n        <div className=\"tooltip--container\" style={{backgroundColor: `${tinycolor(props.point.serieColor).lighten(15).toString()}`}}>\n            {props.point.data.y} <br/>\n            {props.point.id.endsWith(\"0\") && \"Start: \"}            \n            {props.point.id.endsWith(\"1\") && \"Due: \"}\n            {moment(props.point.data.x).format(\"MMM DD\")}\n        </div>\n        )      \n}\n\nexport default CustomTooltip;\n\n\n","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\n\nimport CustomTooltip from './CustomTooltip';\n\nimport './TaskGraph.css';\n\nfunction TaskGraph(props) {\n\n  const theme = {\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\"\n  };\n\n  const data = props.tasks.filter(task => !task.completed).map(task => {\n    let newTask = {};\n    newTask.id = task.taskID;\n    let startData = {};\n    startData.x = moment(task.startDate).format(\"YYYY-MM-DD\");\n    startData.y = task.name;\n    let endData = {};\n    endData.x = moment(task.endDate).format(\"YYYY-MM-DD\");\n    endData.y = task.name;\n    newTask.data = [startData, endData];\n    return newTask;\n  })\n\n  function handleGraphClick(Point) {\n    const id = Point.id.slice(0, -2);\n    props.openFromGraphId(id);\n    props.history.push(\"/todo_react_application/\");\n  }\n\n  // Using code from tylercrosse https://github.com/plouc/nivo/issues/353\n  const HorizontalTick = ({ textAnchor, textBaseline, value, x, y }) => {\n    const MAX_LINE_LENGTH = 16;\n    const MAX_LINES = 2;\n    const LENGTH_OF_ELLIPSIS = 3;\n    const TRIM_LENGTH = MAX_LINE_LENGTH * MAX_LINES - LENGTH_OF_ELLIPSIS;\n    const trimWordsOverLength = new RegExp(`^(.{${TRIM_LENGTH}}[^\\\\w]*).*`);\n    const groupWordsByLength = new RegExp(\n      `([^\\\\s].{0,${MAX_LINE_LENGTH}}(?=[\\\\s\\\\W]|$))`,\n      'gm',\n    );\n    const splitValues = value\n      .replace(trimWordsOverLength, '$1...')\n      .match(groupWordsByLength)\n      .slice(0, 2)\n      .map((val, i) => (\n        <tspan\n          key={val}\n          dy={16 * i}\n          x={-15}\n          style={{ fontFamily: \"Verdana, Arial, sans-serif\", fontSize: \"14px\" }}\n        >\n          {val}\n        </tspan>\n      ));\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text alignmentBaseline={textBaseline} textAnchor={textAnchor}>\n          {splitValues}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <Container fluid=\"lg\" style={{ height: window.innerHeight - 125 < 600 ? window.innerHeight - 125 : 600 }}>\n      <ResponsiveLine className=\"graph\" style={{ cursor: \"crosshair\" }}\n        data={data}\n        margin={{ top: 70, right: 20, bottom: 70, left: 150 }}\n        xScale={{\n          type: \"time\",\n          format: \"%Y-%m-%d\"\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{\n          type: \"point\"\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          renderTick: HorizontalTick\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickRotation: -45,\n          tickPadding: 15\n        }}\n        theme={theme}\n        colors={{ scheme: \"accent\" }}\n        lineWidth={20}\n        pointSize={20}\n        enableGridX={true}\n        enableGridY={true}\n        tooltip={CustomTooltip}\n        useMesh={true}\n        onClick={handleGraphClick}\n        enableCrosshair={false}\n      />\n    </Container>\n  );\n}\n\nexport default withRouter(TaskGraph);\n\n\n","import React from 'react';\nimport {Container, Image} from 'react-bootstrap';\n\n\nfunction NoTasksGraph(props) {\n  return (\n    <Container fluid=\"lg\">\n        <h3 style = {{textAlign: \"center\"}}>Start adding tasks to see them displayed here, like the example below.</h3>\n        <Image src={require(`./Example_Task_Graph.jpg`)} fluid/>\n    </Container>\n  );\n}\n\nexport default NoTasksGraph;\n\n\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './Login/Login';\nimport Header from './Header/Header';\nimport TaskList from './TaskList/TaskList';\nimport TaskGraph from './TaskGraph/TaskGraph';\nimport NoTasksGraph from './TaskGraph/NoTasksGraph';\n\nimport './App.css';\n\nfunction App() {\n  // listen for use of mouse\n  document.body.addEventListener('mousedown', function () {\n    document.body.classList.add('using-mouse');\n  });\n\n  // listen for use of tab\n  document.body.addEventListener('keydown', function (event) {\n    if (event.keyCode === 9) {\n      document.body.classList.remove('using-mouse');\n    }\n  });\n\n  const [tasks, setTasks] = useState();\n  const [user, setUser] = useState({userID:null, username:null});\n\n  useEffect(() => {\n    axios\n      .get(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks?userID=${user.userID}`)\n      .then(response => {\n        let updatedTasks = response.data.tasks.map(task => {\n          task.percentageCompletion = calculatePercentageCompletion(task.startDate, task.endDate);\n          task.cardOpen = false;\n          return task;\n        })\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }, [user]);\n\n  function deleteTask(taskID) {\n    axios\n      .delete(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`)\n      .then(response => {\n        const updatedTasks = tasks.filter(task => task.taskID !== taskID);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function calculatePercentageCompletion(startDate, endDate) {\n    const now = moment().valueOf();\n    const start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    const end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n    const percentageCompletion = ((now - start) / (end - start)) * 100;\n    if (percentageCompletion < 0) return 0;\n    return isFinite(percentageCompletion) ? percentageCompletion : 100;\n  }\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n    repeatAfterCompletionFrequencyType) {\n    const newTask = {\n      userID: user.userID,\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatType,\n      repeatAfterCompletionFrequency,\n      repeatAfterCompletionFrequencyType,\n      completed: false,\n      percentageCompletion: calculatePercentageCompletion(startDate, endDate),\n      cardOpen: false\n    };\n\n    axios\n      .post(\"https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks\", newTask)\n      .then(response => {\n        newTask.taskID = response.data.newTask[0].taskID;\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  };\n\n  function completeTask(taskID) {\n    const updatedTask = tasks.find(task => task.taskID === taskID);\n\n    if (!updatedTask.repeats) {\n      updatedTask.completed = true;\n      updatedTask.completeDate = moment().format(\"YYYY-MM-DD\");\n    }\n    else if (updatedTask.repeatType === \"repeatsAfterCompletion\") {\n      updatedTask.endDate = moment().add(updatedTask.repeatAfterCompletionFrequency, updatedTask.repeatAfterCompletionFrequencyType).format(\"YYYY-MM-DD\");\n      updatedTask.startDate = moment().format(\"YYYY-MM-DD\");\n      updatedTask.percentageCompletion = calculatePercentageCompletion(updatedTask.startDate, updatedTask.endDate);\n    }\n\n    axios\n      .put(`https://3f77y34kad.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskID}`, updatedTask)\n      .then(response => {\n        const updatedTasks = [...tasks].map(task => task.taskID === taskID ? updatedTask : task);\n        setTasks(updatedTasks);\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }\n\n  function openTaskCard(taskID) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID === taskID) { task.cardOpen = !task.cardOpen }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  function openFromGraphId(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskID.toString() === id) { task.cardOpen = true }\n      else { task.cardOpen = false }\n      return task\n    })\n    setTasks(updatedTasks);\n  }\n\n  function handleLogOut() {\n    setUser({userID:null, username:null});\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header handleLogOut={handleLogOut} userID={user.userID}/>\n        <Switch>\n          {!!user.userID ?\n            <><Route path=\"/todo_react_application/graph\">\n              {(tasks && tasks.length > 0) ? <TaskGraph tasks={tasks} openFromGraphId={openFromGraphId} /> : <NoTasksGraph />}\n            </Route>\n            <Route exact path=\"/todo_react_application/\">\n              <TaskList userID={user.userID} username = {user.username} addTask={addTask} completeTask={completeTask} deleteTask={deleteTask} tasks={tasks} openFromGraphId={openFromGraphId} openTaskCard={openTaskCard} />\n            </Route> </>:\n              <Login setUser={setUser} />}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}