{"version":3,"sources":["Header/Header.js","ButtonItem/ButtonItem.js","TaskProgressBar/TaskProgressBar.js","TaskBody/TaskBody.js","TaskItem/TaskItem.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","DetailDisplay/DetailDisplay.js","TaskDisplay/TaskDisplay.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CheckboxIcon","props","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","children","TaskProgressBar","colour2","colour3","colourRange","percentageCompletion","green2","role","style","backgroundImage","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskBody","completed","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatFrequency","repeatFrequencyType","TaskItem","React","useState","open","setOpen","Card","backgroundColor","tabIndex","onClick","onKeyPress","target","charCode","aria-controls","aria-expanded","textDecoration","name","OverlayTrigger","placement","overlay","Tooltip","completeTask","id","deleteTask","Collapse","in","Body","AddTask","setName","setTaskDetails","setStartDate","setEndDate","setRepeats","setRepeatFrequency","setRepeatFrequencyType","handleRadioButton","event","value","as","type","addTask","Form","Group","controlId","Control","placeholder","onChange","e","Label","Row","Check","custom","Intro","tasksDueToday","tasks","filter","t","length","tasksNotCompleted","TaskList","sort","a","b","map","task","key","DetailDisplay","TaskDisplay","Footer","App","uuidv4","setTasks","now","valueOf","start","end","newTask","updatedTasks","add","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9914bead.chunk.js","sourcesContent":["import React from 'react';\n// import ButtonItem, { SettingsIcon } from '../ButtonItem/ButtonItem';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button> */}\n        {/* <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\" style>\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link 2</a>\n                </li>\n            </ul>\n        </div> */}\n        <h1 className=\"navbar-brand title\">My Tasks</h1>\n        {/* <ButtonItem>\n            <SettingsIcon squareHeight=\"1.5em\"/>\n        </ButtonItem>   */}\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function SettingsIcon(props) {\n  return (\n    <svg className=\"bi bi-gear\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\" fill=\"white\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8.837 1.626c-.246-.835-1.428-.835-1.674 0l-.094.319A1.873 1.873 0 014.377 3.06l-.292-.16c-.764-.415-1.6.42-1.184 1.185l.159.292a1.873 1.873 0 01-1.115 2.692l-.319.094c-.835.246-.835 1.428 0 1.674l.319.094a1.873 1.873 0 011.115 2.693l-.16.291c-.415.764.42 1.6 1.185 1.184l.292-.159a1.873 1.873 0 012.692 1.116l.094.318c.246.835 1.428.835 1.674 0l.094-.319a1.873 1.873 0 012.693-1.115l.291.16c.764.415 1.6-.42 1.184-1.185l-.159-.291a1.873 1.873 0 011.116-2.693l.318-.094c.835-.246.835-1.428 0-1.674l-.319-.094a1.873 1.873 0 01-1.115-2.692l.16-.292c.415-.764-.42-1.6-1.185-1.184l-.291.159A1.873 1.873 0 018.93 1.945l-.094-.319zm-2.633-.283c.527-1.79 3.065-1.79 3.592 0l.094.319a.873.873 0 001.255.52l.292-.16c1.64-.892 3.434.901 2.54 2.541l-.159.292a.873.873 0 00.52 1.255l.319.094c1.79.527 1.79 3.065 0 3.592l-.319.094a.873.873 0 00-.52 1.255l.16.292c.893 1.64-.902 3.434-2.541 2.54l-.292-.159a.873.873 0 00-1.255.52l-.094.319c-.527 1.79-3.065 1.79-3.592 0l-.094-.319a.873.873 0 00-1.255-.52l-.292.16c-1.64.893-3.433-.902-2.54-2.541l.159-.292a.873.873 0 00-.52-1.255l-.319-.094c-1.79-.527-1.79-3.065 0-3.592l.319-.094a.873.873 0 00.52-1.255l-.16-.292c-.892-1.64.902-3.433 2.541-2.54l.292.159a.873.873 0 001.255-.52l.094-.319z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 5.754a2.246 2.246 0 100 4.492 2.246 2.246 0 000-4.492zM4.754 8a3.246 3.246 0 116.492 0 3.246 3.246 0 01-6.492 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\nimport './TaskProgressBar.css';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n  let colour1 = \"rgb(0,128,0)\"\n  let colour2, colour3, colourRange;\n\n  if (width <= 50) {\n    let red2 = 255 * width / 50;\n    let green2 = 128 + 127 * width / 50;\n    colour2 = `rgb(${red2},${green2},0)`;\n    colourRange = `${colour1},${colour2}`;\n  }\n\n  if (width >= 50) {\n    let red2 = 255*width/(2*50);\n    let green2 = 128 + 127 * width / (2*50);\n    colour2 = `rgb(${red2},${green2},0)`;\n    let green3 = 255 - 255 * (width - 50) / 50;\n    colour3 = `rgb(255,${green3},0)`;\n    colourRange = `${colour1},${colour2},${colour3}`;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={{ backgroundImage: `linear-gradient(to right,${colourRange})`, width: `${width}%` }} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport moment from 'moment';\nimport './TaskBody.css';\n\nfunction TaskBody(props) {\n    return (\n        <div className=\"task-body\">\n            {!props.completed &&\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                    </div>\n\n                </div>}\n            {props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h6>{props.taskDetails}</h6>\n                </div>\n            </div>\n            {props.repeats &&\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h6>This task repeats every {props.repeatFrequency} {props.repeatFrequencyType}.</h6>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../ButtonItem/ButtonItem';\nimport TaskProgressBar from '../TaskProgressBar/TaskProgressBar';\nimport TaskBody from '../TaskBody/TaskBody';\nimport { Card, Collapse, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n  const [open, setOpen] = React.useState(false);\n\n  function handleDeleteClick() {\n    props.deleteTask(props.id)\n  }\n\n  function handleCompleteClick() {    \n    props.completeTask(props.id)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6'}}>\n      <Card.Header\n        tabIndex=\"0\"\n        className=\"h4\"\n        onClick={() => setOpen(!open)}\n        onKeyPress={(target) => target.charCode === 13 ? setOpen(!open) : null}\n        aria-controls=\"task-item-contents\"\n        aria-expanded={open}\n      >\n        <div className=\"row\">\n          <div className=\"col-8\" style={{textDecoration: props.completed ? 'line-through' : ''}}>\n            {props.repeats && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n          </div>\n          <div className=\"col-4\">\n            <div className=\"btn-group float-right\">\n\n              {!props.completed &&\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Mark as complete</Tooltip>}>\n                  <ButtonItem onClick={ handleCompleteClick } aria-label=\"Mark as complete\">\n                    <CheckboxIcon squareHeight=\"1.5em\" />\n                  </ButtonItem>\n                </OverlayTrigger>}\n\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\n                <ButtonItem onClick={ handleDeleteClick } aria-label=\"Delete\">\n                  <DeleteIcon squareHeight=\"1.3em\" />\n                </ButtonItem>\n              </OverlayTrigger>\n            </div>\n          </div>\n        </div>\n        {!props.completed && <div className=\"row\">\n          <div className=\"col\">\n            <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n          </div>\n        </div>}\n      </Card.Header>\n\n      <Collapse in={open}>\n        <Card.Body \n        tabIndex=\"0\">\n          <TaskBody {...props}/>\n        </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React, {useState} from 'react';\nimport moment from 'moment';\n\nimport ButtonItem, { AddIcon } from '../ButtonItem/ButtonItem';\nimport { Card, Collapse, Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = React.useState(false);\n  \n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));  \n  const [repeats, setRepeats] = useState(false);\n  const [repeatFrequency, setRepeatFrequency] = useState(0);\n  const [repeatFrequencyType, setRepeatFrequencyType] = useState(\"\");\n\n  function handleAddTaskClick() {\n    props.addTask(name,taskDetails,startDate,endDate,repeats,repeatFrequency,repeatFrequencyType);\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"doesRepeat\") {\n      setRepeats(true);\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  return (\n    <Card className=\"add-task\">\n      <Card.Header\n        tabIndex=\"0\"  \n        as=\"h4\"\n        onClick={() => setOpen(!open)}\n        onKeyPress={(target) => target.charCode === 13 ? setOpen(!open) : null}\n        aria-controls=\"add-task-contents\"\n        aria-expanded={open}\n      >\n        <div className=\"row\">\n          <div className=\"col-10 align-self-center\">\n            Add Task\n          </div>\n          <div className=\"col-2\">\n            <div className=\"float-right\">\n            <OverlayTrigger placement=\"left\" overlay={<Tooltip>Add task</Tooltip>}>\n              <ButtonItem type=\"submit\" aria-label=\"Add task\" onClick = {handleAddTaskClick}>\n                <AddIcon squareHeight=\"2em\" />\n              </ButtonItem>\n              </OverlayTrigger>\n            </div>\n          </div>\n        </div>\n      </Card.Header>\n\n      <Collapse in={open}>\n        <Card.Body>\n          <div id=\"add-task-contents\">\n            <Form>\n              <Form.Group controlId=\"formTaskName\">\n                <Form.Control type=\"text\" placeholder=\"Name your next task\" onChange = {e => setName(e.target.value)}/>\n              </Form.Group>\n            </Form>\n\n            <Form>\n              <Form.Group controlId=\"formTaskDetails\">\n                <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange = {e => setTaskDetails(e.target.value)}/>\n              </Form.Group>\n            </Form>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <Form>\n                <Form.Group controlId=\"formStartDate\">\n                  <Form.Label>Start date</Form.Label>\n                  <Form.Control type=\"date\" onChange = {e => setStartDate(e.target.value)}/>\n                </Form.Group>\n              </Form>\n            </div>\n            <div className=\"col-6\">\n              <Form>\n                <Form.Group controlId=\"formEndDate\">\n                  <Form.Label>End date</Form.Label>\n                  <Form.Control type=\"date\" onChange = {e => setEndDate(e.target.value)}/>\n                </Form.Group>\n              </Form>\n            </div>\n          </div>\n          </div>\n\n        <Form>\n          <Form.Row className=\"customRow\">\n            <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange = { handleRadioButton }/>\n            <div className=\"col align-self-center\">\n              <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n            </div>\n          </Form.Row>\n\n          <Form.Row className=\"customRow\">\n            <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesRepeat\" onChange = { handleRadioButton }/>\n            <div className=\"col-4 col-md-2 align-self-center\">\n              <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n            </div>\n\n            <div className=\"col-3 col-md-1\">\n              <Form.Control type=\"number\" onChange = {e => setRepeatFrequency(e.target.value)}/>\n            </div>\n            <div className=\"col-4 col-md-2\">\n              <Form.Control as=\"select\" custom onChange = {e => setRepeatFrequencyType(e.target.value)}>\n                <option>days</option>\n                <option>weeks</option>\n                <option>months</option>\n                <option>years</option>\n              </Form.Control>\n\n            </div>\n            <div className=\"col-12 col-md-6 align-self-center\">\n              <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n            </div>\n\n          </Form.Row>\n          {/* <Form.Row className=\"customRow\">\n            <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\"/>\n            <div className=\"col-4 col-md-2 align-self-center\">\n              <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n            </div>\n            <div className=\"col-3 col-md-1\">\n              <Form.Control type=\"number\" />\n            </div>\n            <div className=\"col-4 col-md-2 align-self-center\">\n              <Form.Label className=\"noBottonMargin\">weeks on</Form.Label>\n            </div>\n            <div className=\"col-12 col-md-6 align-self-center\">\n              <div className=\"row\">\n                {[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"].map((day,i) => (                 \n                    <Form.Check key={i} inline label={day} />                  \n                ))}\n              </div>\n            </div>\n          </Form.Row> */}\n        </Form>\n        </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks.filter(t=>t.endDate === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks.filter(t=>t.completed === false).length;\n\n    return (\n        <div className=\"card-header rounded intro\" \n        tabIndex=\"0\">\n            <h4>You have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}.</h4>\n        </div>\n    );\n}\n\nexport default Intro;\n","import React from 'react';\nimport moment from 'moment';\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    function compare(a, b) {\n        if (a.completed === true || a.startDate > moment().format(\"YYYY-MM-DD\") || a.endDate > b.endDate) return 1;\n        if (a.endDate < b.endDate || a.startDate < b.startDate) return -1;\n        return 0;\n    }\n\n    return (\n        <div className=\"col-12 col-lg-8\">\n            <div className=\"mx-2\">\n\n                <div className=\"row my-2 d-lg-none\">\n                    <Intro tasks={props.tasks} />\n                </div>\n\n                <div className=\"row my-2\">\n                    <AddTask addTask = {props.addTask} tasks = {props.tasks}/>\n                </div>\n\n\n                {props.tasks.sort(compare).map(task => (\n                    <div key={task.id} className=\"row my-2\">\n                        <TaskItem completeTask = {props.completeTask} deleteTask={props.deleteTask} {...task} />\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport Intro from '../Intro/Intro';\nimport './DetailDisplay.css';\n\nfunction DetailDisplay(props) {\n    return (\n        <div className=\"d-none d-lg-block col-lg-4 \">\n            <div className=\"mx-2\">\n            <div className=\"row my-2\">\n                    <Intro tasks = {props.tasks}/>\n                </div>                \n                <div className=\"row my-2\">\n                    <div className=\"card-header rounded detail-display\">\n                        <h4>Side detail display.</h4>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DetailDisplay;","import React from 'react';\nimport './TaskDisplay.css';\nimport TaskList from '../TaskList/TaskList';\nimport DetailDisplay from '../DetailDisplay/DetailDisplay';\n\nfunction TaskDisplay(props) {\n  return (\n    <main className=\"container-fluid\">\n        <div className=\"row\">\n            <TaskList addTask = {props.addTask} completeTask = {props.completeTask} deleteTask={props.deleteTask} tasks = {props.tasks}/>\n            <DetailDisplay tasks = {props.tasks}/>\n        </div>\n    </main>\n  );\n}\n\nexport default TaskDisplay;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n    const copy = \"\\u00A9\";\n  return (\n      <footer className=\"block-quote footer\">\n          <div className=\"container\">\n              <span>\n                  {copy} <cite>Saoirse Bryar, 2020</cite>\n              </span>\n              \n          </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Header from './Header/Header';\nimport TaskDisplay from './TaskDisplay/TaskDisplay';\nimport Footer from './Footer/Footer';\n\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: uuidv4(),\n      name: \"Tidying\",\n      taskDetails: \"Sort through paperwork\",\n      startDate: \"2020-05-06\",\n      endDate: \"2020-08-11\",\n      percentageCompletion: 20,\n      completed: false,\n      repeats: false\n    },\n    {\n      id: uuidv4(),\n      name: \"Cleaning\",\n      taskDetails: \"Clean bathrooms\",\n      startDate: \"2020-05-05\",\n      endDate: \"2020-08-11\",\n      percentageCompletion: 60,\n      completed: false,\n      repeats: true,\n      repeatFrequency: 7,\n      repeatFrequencyType: \"days\"\n    },\n    {\n      id: uuidv4(),\n      name: \"Hoovering\",\n      taskDetails: \"Downstairs\",\n      startDate: \"2020-04-03\",\n      endDate: \"2020-05-01\",\n      percentageCompletion: 80,\n      completed: true,\n      completeDate: \"2020-04-26\",\n      repeats: false\n    }\n  ]);\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatFrequency, repeatFrequencyType) {\n    let now = moment().valueOf();\n    let start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    let end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n\n    const newTask = {\n      id: uuidv4(),\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatFrequency,\n      repeatFrequencyType,\n      completed: false,\n      percentageCompletion: ((now-start)/(end-start))*100\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n  };\n\n  function completeTask(id) {\n    const updatedTasks = tasks.map(task => {\n      if(task.id === id) {\n        if(task.repeats === false) {\n          task.completed = true\n          task.completeDate = moment().format(\"YYYY-MM-DD\");\n        }\n        else if(task.repeats === true){\n          task.endDate = moment(task.endDate,\"YYYY-MM-DD\").add(task.repeatFrequency,task.repeatFrequencyType).format(\"YYYY-MM-DD\");\n          task.startDate = moment().format(\"YYYY-MM-DD\");\n        }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <TaskDisplay addTask = {addTask} completeTask = {completeTask} deleteTask={deleteTask} tasks={tasks} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}