{"version":3,"sources":["Header/Header.js","ButtonItem/SimpleButton.js","TaskItem/TaskComponents/TaskBody.js","ButtonItem/ButtonItem.js","TaskItem/TaskComponents/TaskProgressBar.js","TaskItem/TaskComponents/TaskHeader.js","TaskItem/TaskItem.js","AddTask/FormComponents/AddTaskHeader.js","AddTask/FormComponents/NameField.js","AddTask/FormComponents/TaskDetailsField.js","AddTask/FormComponents/DatesField.js","AddTask/FormComponents/DoesNotRepeatField.js","AddTask/FormComponents/RepeatsAfterCompletionField.js","AddTask/AddTask.js","Intro/Intro.js","TaskList/TaskList.js","Footer/Footer.js","TaskGraph/CustomTooltip.js","TaskGraph/TaskGraph.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","expanded","setExpanded","Navbar","className","expand","fixed","Brand","Toggle","aria-controls","onClick","Collapse","id","Nav","Link","href","setPage","SimpleButton","variant","children","TaskBody","in","cardOpen","Card","Body","tabIndex","completed","Row","Col","xs","moment","startDate","format","endDate","completeDate","taskDetails","repeats","repeatAfterCompletionFrequency","repeatAfterCompletionFrequencyType","handleCompleteClick","handleDeleteClick","CheckboxIcon","width","squareHeight","height","viewBox","fill","xmlns","fillRule","d","clipRule","DeleteIcon","AddIcon","RepeatIcon","ButtonItem","TaskProgressBar","percentageCompletion","role","style","backgroundImage","colour2","colour3","colourRange","green2","calculateColourRange","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","TaskHeader","aria-expanded","open","textDecoration","openTaskCard","onKeyPress","target","charCode","name","ButtonGroup","OverlayTrigger","placement","overlay","Tooltip","TaskItem","deleteTask","completeTask","backgroundColor","setOpen","AddTaskHeader","as","NameField","Form","Group","controlId","Control","type","placeholder","errors","onChange","e","setName","value","TaskDetailsField","setTaskDetails","DatesField","Label","setStartDate","setEndDate","DoesNotRepeatField","Check","defaultChecked","handleRadioButton","RepeatsAfterCompletionField","setRepeatAfterCompletionFrequency","custom","setRepeatAfterCompletionFrequencyType","AddTask","setRepeats","repeatType","setRepeatType","repeatRegularDaysFrequency","repeatRegularDaysArrayDays","setErrors","event","updatedErrors","Object","assign","addTask","Intro","tasksDueToday","tasks","filter","t","length","tasksNotCompleted","TaskList","uuidv4","addTaskKey","setAddTaskKey","key","sort","a","b","map","task","Footer","CustomTooltip","tinycolor","point","serieColor","lighten","toString","data","y","endsWith","x","TaskGraph","newTask","startData","endData","margin","top","right","bottom","left","xScale","xFormat","yScale","axisTop","axisRight","axisLeft","renderTick","textAnchor","textBaseline","trimWordsOverLength","RegExp","MAX_LINE_LENGTH","groupWordsByLength","splitValues","replace","match","slice","val","i","dy","fontFamily","fontSize","transform","alignmentBaseline","axisBottom","tickRotation","tickPadding","theme","colors","scheme","lineWidth","enablePoints","enableGridX","enableGridY","tooltip","useMesh","Point","openFromGraphId","App","setTasks","page","calculatePercentageCompletion","now","valueOf","start","isFinite","updatedTasks","Container","fluid","add","window","innerHeight","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.764e57ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './Header.css';\n\nfunction Header(props) {\n    const [expanded, setExpanded] = useState(false);\n    return (\n        <Navbar className=\"navbar--my-tasks-app\" expand=\"sm\" fixed=\"top\" expanded={expanded}>\n            <Navbar.Brand className=\"brand--my-tasks-app\">My Tasks App</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav onClick={() => setExpanded(false)}>\n                    <Nav.Link className=\"px-3 navlink--my-tasks-app\" href=\"#\" onClick={() => props.setPage(\"Tasks\")}>Tasks</Nav.Link>\n                    <Nav.Link className=\"px-3 navlink--my-tasks-app\" href=\"#\" onClick={() => props.setPage(\"Graph\")}>Graph</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nimport './SimpleButton.css';\n\n\nfunction SimpleButton (props) {\n  return (\n    <button className={`simple-button-${props.variant} simple-button btn btn-block mt-3`} onClick={props.onClick}>{props.children}</button>\n  )\n}\n\n\nexport default SimpleButton;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Row, Col } from 'react-bootstrap';\n\nimport SimpleButton from '../../ButtonItem/SimpleButton';\n\nfunction TaskBody(props) {\n    return (\n        <Collapse in={props.cardOpen === true}>\n            <Card.Body tabIndex=\"0\">\n                {!props.completed &&\n                    <Row>\n                        <Col xs={6}>\n                            <h5>Start: {moment(props.startDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                        <Col xs={6} className=\"col-6 text-right\">\n                            <h5>Due: {moment(props.endDate).format(\"DD/MM/YYYY\")}</h5>\n                        </Col>\n                    </Row>}\n                {props.completed && <h5>Completed: {moment(props.completeDate).format(\"DD/MM/YYYY\")}</h5>}\n                <Row>\n                    <Col>\n                        <h6>{props.taskDetails}</h6>\n                    </Col>\n                </Row>\n                {props.repeats &&\n                    <Row>\n                        <Col>\n                            <h6>This task repeats {props.repeatAfterCompletionFrequency} {props.repeatAfterCompletionFrequencyType} after being completed.</h6>\n                        </Col>\n                    </Row>\n                }\n                <Row>\n                    {!props.completed && <Col xs={6}>\n                        <SimpleButton onClick={props.handleCompleteClick} variant=\"complete\">Complete task</SimpleButton>\n                    </Col>}\n                    <Col>\n                        <SimpleButton onClick={props.handleDeleteClick} variant=\"delete\">Delete task</SimpleButton>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Collapse>\n    );\n}\n\nexport default TaskBody;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem (props) {\n  return (\n    <button {...props} className=\"btn\">{props.children}</button>\n  )\n} \n\nexport function CheckboxIcon(props) {\n  return (\n    <svg className=\"bi bi-check-box\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M1.5 13A1.5 1.5 0 003 14.5h10a1.5 1.5 0 001.5-1.5V8a.5.5 0 00-1 0v5a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h8a.5.5 0 000-1H3A1.5 1.5 0 001.5 3v10z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nexport function DeleteIcon(props) {\n  return (\n    <svg className=\"bi bi-x-square\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function AddIcon(props) {\n  return (\n    <svg className=\"bi bi-plus-circle\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport function RepeatIcon(props) {\n  return (\n    <svg className=\"bi bi-arrow-clockwise\" width={props.squareHeight} height={props.squareHeight} viewBox=\"0 0 16 16\"\n      fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\"\n        d=\"M3.17 6.706a5 5 0 017.103-3.16.5.5 0 10.454-.892A6 6 0 1013.455 5.5a.5.5 0 00-.91.417 5 5 0 11-9.375.789z\"\n        clipRule=\"evenodd\" />\n      <path fillRule=\"evenodd\"\n        d=\"M8.147.146a.5.5 0 01.707 0l2.5 2.5a.5.5 0 010 .708l-2.5 2.5a.5.5 0 11-.707-.708L10.293 3 8.147.854a.5.5 0 010-.708z\"\n        clipRule=\"evenodd\" />\n    </svg>\n  )\n}\n\nexport default ButtonItem;\n","import React from 'react';\n\nfunction TaskProgressBar(props) {\n  const width = props.percentageCompletion;\n\n  function calculateColourRange(width) {\n    let colour1 = \"rgb(0,128,0)\"\n    let colour2, colour3, colourRange;\n\n    if (width <= 50) {\n      let red2 = 255 * width / 50;\n      let green2 = 128 + 127 * width / 50;\n      colour2 = `rgb(${red2},${green2},0)`;\n      colourRange = `${colour1},${colour2}`;\n    }\n\n    if (width >= 50) {\n      let red2 = 255 * width / (2 * 50);\n      let green2 = 128 + 127 * width / (2 * 50);\n      colour2 = `rgb(${red2},${green2},0)`;\n      let green3 = 255 - 255 * (width - 50) / 50;\n      colour3 = `rgb(255,${green3},0)`;\n      colourRange = `${colour1},${colour2},${colour3}`;\n    }\n    return colourRange;\n  }\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-bar\" role=\"progressbar\" style={{ backgroundImage: `linear-gradient(to right,${calculateColourRange(width)})`, width: `${width}%` }} aria-valuenow={props.percentageCompletion} aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Percentage of way through time allocated for task\"></div>\n    </div>\n  )\n}\n\nexport default TaskProgressBar;\n","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip, Row, Col, ButtonGroup } from 'react-bootstrap';\n\nimport ButtonItem, { CheckboxIcon, DeleteIcon, RepeatIcon } from '../../ButtonItem/ButtonItem';\nimport TaskProgressBar from './TaskProgressBar';\n\n\nfunction TaskHeader(props) {\n\n  function handleHeaderClick() {\n    props.openTaskCard(props.id);\n  }\n  return (\n    <Card.Header\n      className=\"h4\"\n      aria-controls=\"task-item-contents\"\n      aria-expanded={props.open}\n    >\n      <Row>\n        <Col xs={8}\n          style={{ textDecoration: props.completed ? 'line-through' : '' }}\n          tabIndex=\"0\"\n          onClick={handleHeaderClick}\n          onKeyPress={(target) => target.charCode === 13 ? props.openTaskCard(props.id) : null}>\n          {props.repeats && <RepeatIcon squareHeight=\"1.2em\" />} {props.name}\n        </Col>\n\n        <Col xs={4}>\n          <ButtonGroup className=\"float-right\">\n            {!props.completed &&\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip>Mark as complete</Tooltip>}>\n                <ButtonItem onClick={props.handleCompleteClick} aria-label=\"Mark as complete\">\n                  <CheckboxIcon squareHeight=\"1.5em\" />\n                </ButtonItem>\n              </OverlayTrigger>}\n\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\n              <ButtonItem onClick={props.handleDeleteClick} aria-label=\"Delete\">\n                <DeleteIcon squareHeight=\"1.3em\" />\n              </ButtonItem>\n            </OverlayTrigger>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n      {!props.completed && <Row>\n        <Col>\n          <TaskProgressBar percentageCompletion={props.percentageCompletion} />\n        </Col>\n      </Row>}\n\n    </Card.Header>\n  );\n}\n\nexport default TaskHeader;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TaskBody from './TaskComponents/TaskBody';\nimport TaskHeader from './TaskComponents/TaskHeader';\n\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n  // const [open, setOpen] = React.useState(false);\n\n  function handleDeleteClick() {\n    props.deleteTask(props.id)\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.id)\n  }\n\n  return (\n    <Card className=\"task-item\" style={{ backgroundColor: props.completed ? 'rgba(130, 138, 146, 0.74)' : '#BADEC6' }}>\n      <TaskHeader {...props} open={props.open} setOpen={props.setOpen} handleCompleteClick={handleCompleteClick} handleDeleteClick={handleDeleteClick} openTaskCard={props.openTaskCard}/>\n      <TaskBody {...props} open={props.open} handleDeleteClick={handleDeleteClick} handleCompleteClick={handleCompleteClick} />\n    </Card >\n  );\n}\n\nexport default TaskItem;\n","import React from 'react';\n\nimport { AddIcon } from '../../ButtonItem/ButtonItem';\nimport { Card} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction AddTaskHeader(props) {\n    return (\n        <Card.Header\n            tabIndex=\"0\"\n            as=\"h4\"\n            aria-controls=\"add-task-contents\"\n            aria-expanded={props.open}\n            onClick={() => props.setOpen(!props.open)}\n            onKeyPress={(target) => target.charCode === 13 ? props.setOpen(!props.open) : null}\n        >\n            <div className=\"row\">\n                <div className=\"col-10 align-self-center\"\n                    >\n                    Add Task\n          </div>\n                <div className=\"col-2\">\n                    <div className=\"float-right\">\n                        <AddIcon squareHeight=\"1.2em\" />\n                    </div>\n                </div>\n            </div>\n        </Card.Header>\n    )\n}\n\nexport default AddTaskHeader;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction NameField(props) {\n  return (\n    <Form.Group controlId=\"formTaskName\">\n      <Form.Control \n        type=\"text\" \n        placeholder={props.errors.name ? \"Input a name for your task\":\"Name your next task\"}\n        onChange={e => props.setName(e.target.value)} \n        style={props.errors.name ? {backgroundColor:\"yellow\"} : null}\n      />\n    </Form.Group>\n  )\n}\n\nexport default NameField;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction TaskDetailsField(props) {\n    return (\n      <Form.Group controlId=\"formTaskDetails\">\n        <Form.Control type=\"text\" placeholder=\"Enter details about your task\" onChange={e => props.setTaskDetails(e.target.value)} />\n      </Form.Group>\n    )\n}\n\nexport default TaskDetailsField;","import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DatesField(props) {\n  return (\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formStartDate\">\n        <Form.Label>When should you start this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setStartDate(e.target.value)} />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"formEndDate\">\n        <Form.Label>When do you need to finish this task?</Form.Label>\n        <Form.Control type=\"date\" onChange={e => props.setEndDate(e.target.value)} />\n      </Form.Group>\n    </Form.Row>\n  )\n}\n\nexport default DatesField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction DoesNotRepeatField(props) {\n  return (\n    <>\n      {props.errors.repeats && <span className=\"error\">Select whether this task repeats</span>}\n      <Form.Row className=\"customRow\" >\n        <Form.Check defaultChecked type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"doesNotRepeat\" onChange={props.handleRadioButton}/>\n        <div className=\"col align-self-center\">\n          <Form.Label className=\"noBottonMargin\">Does not repeat</Form.Label>\n        </div>\n      </Form.Row >\n    </>\n  )\n}\n\nexport default DoesNotRepeatField;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../AddTask.css';\n\nfunction RepeatsAfterCompletionField(props) {\n  return (\n    <Form.Row className=\"customRow\">\n      <Form.Check type=\"radio\" name=\"repeatChoice\" className=\"align-self-center\" value=\"repeatsAfterCompletion\" onChange={props.handleRadioButton} />\n      <div className=\"col-4 col-md-2 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">Repeats every</Form.Label>\n      </div>\n\n      <div className=\"col-3 col-md-1\">\n        <Form.Control \n          type=\"number\" \n          onChange={e => props.setRepeatAfterCompletionFrequency(e.target.value)} \n          placeholder={props.errors.repeatAfterCompletionFrequency ? \"?\": null}\n          style={props.errors.repeatAfterCompletionFrequency ? {backgroundColor:\"yellow\"} : null}\n        />\n      </div>\n      <div className=\"col-4 col-md-2\">\n        <Form.Control as=\"select\" custom onChange={e => props.setRepeatAfterCompletionFrequencyType(e.target.value)}>\n          <option>days</option>\n          <option>weeks</option>\n          <option>months</option>\n          <option>years</option>\n        </Form.Control>\n\n      </div>\n      <div className=\"col-12 col-md-6 align-self-center\">\n        <Form.Label className=\"noBottonMargin\">after the task has been completed</Form.Label>\n      </div>\n    </Form.Row>\n\n  )\n}\n\nexport default RepeatsAfterCompletionField;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse, Form } from 'react-bootstrap';\n\nimport AddTaskHeader from './FormComponents/AddTaskHeader';\nimport NameField from './FormComponents/NameField';\nimport TaskDetailsField from './FormComponents/TaskDetailsField';\nimport DatesField from './FormComponents/DatesField';\nimport DoesNotRepeatField from './FormComponents/DoesNotRepeatField';\nimport RepeatsAfterCompletionField from './FormComponents/RepeatsAfterCompletionField';\nimport SimpleButton from '../ButtonItem/SimpleButton';\n// import RepeatsRegularDaysField from './FormComponents/RepeatsRegularDaysField';\n\nimport './AddTask.css';\n\nfunction AddTask(props) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [taskDetails, setTaskDetails] = useState(\"\");\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [repeats, setRepeats] = useState(false);\n  const [repeatType, setRepeatType] = useState(null);\n  const [repeatAfterCompletionFrequency, setRepeatAfterCompletionFrequency] = useState(null);\n  const [repeatAfterCompletionFrequencyType, setRepeatAfterCompletionFrequencyType] = useState(\"days\");\n  const [repeatRegularDaysFrequency, setRepeatRegularDaysFrequency] = useState(null);\n  const [repeatRegularDaysArrayDays, setRepeatRegularDaysArrayDays] = useState([false, false, false, false, false, false, false]);\n  const [errors, setErrors] = useState({ name: false, repeatAfterCompletionFrequency: false });\n\n  function handleAddTaskClick() {\n    if (name === \"\" || repeats === null || (repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null)) {\n      const updatedErrors = Object.assign({}, errors);\n      name === \"\" ? updatedErrors.name = true : updatedErrors.name = false;\n      repeatType === \"repeatsAfterCompletion\" && repeatAfterCompletionFrequency === null ? updatedErrors.repeatAfterCompletionFrequency = true : updatedErrors.repeatAfterCompletionFrequency = false;\n      setErrors(updatedErrors);\n    }\n    else {\n      props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType,\n        repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType,\n        repeatRegularDaysFrequency,\n        repeatRegularDaysArrayDays);\n      }\n  }\n\n  function handleRadioButton(event) {\n    if (event.target.value === \"repeatsAfterCompletion\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsAfterCompletion\");\n    }\n    else if (event.target.value === \"repeatsRegularDays\") {\n      setRepeats(true);\n      setRepeatType(\"repeatsRegularDays\");\n    }\n    else if (event.target.value === \"doesNotRepeat\") {\n      setRepeats(false)\n    };\n  }\n\n  // function handleDayCheckboxes(e) {\n  //   repeatRegularDaysArrayDays[e.target.value] = !repeatRegularDaysArrayDays[e.target.value];\n  //   setRepeatRegularDaysArrayDays(repeatRegularDaysArrayDays);\n  // }\n\n  return (\n    <Card className=\"add-task\">\n      <AddTaskHeader open={open} setOpen={setOpen} />\n      <Collapse in={open}>\n        <Card.Body>\n          <Form>\n            <NameField setName={setName} errors={errors} />\n            <TaskDetailsField setTaskDetails={setTaskDetails} />\n            <DatesField setStartDate={setStartDate} setEndDate={setEndDate} />\n            <DoesNotRepeatField errors={errors} handleRadioButton={handleRadioButton} />\n            <RepeatsAfterCompletionField errors={errors} handleRadioButton={handleRadioButton} setRepeatAfterCompletionFrequency={setRepeatAfterCompletionFrequency} setRepeatAfterCompletionFrequencyType={setRepeatAfterCompletionFrequencyType} />\n            {/* <RepeatsRegularDaysField errors={errors} handleRadioButton={handleRadioButton} setRepeatRegularDaysFrequency={setRepeatRegularDaysFrequency} handleDayCheckboxes={handleDayCheckboxes} /> */}\n          </Form>\n          <SimpleButton variant=\"add-task\" onClick={handleAddTaskClick}>Submit Task</SimpleButton> \n          </Card.Body>\n      </Collapse>\n    </Card >\n  );\n}\n\nexport default AddTask;\n","import React from 'react';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport './Intro.css';\n\nfunction Intro(props) {\n    const tasksDueToday = props.tasks.filter(t=>t.endDate === moment().format(\"YYYY-MM-DD\")).length;\n    const tasksNotCompleted = props.tasks.filter(t=>t.completed === false).length;\n\n    return (\n        <Card.Header className=\"intro\" tabIndex=\"0\">\n            <h4>You have {tasksDueToday} task{tasksDueToday === 1? \"\":\"s\"} to complete today out of {tasksNotCompleted} unfinished task{tasksNotCompleted === 1? \"\":\"s\"}</h4>\n        </Card.Header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\nimport Intro from '../Intro/Intro';\n\nimport './TaskList.css';\n\nfunction TaskList(props) {\n    const [addTaskKey, setAddTaskKey] = useState(uuidv4());  \n\n    function compare(a, b) {\n        if (a.completed === true || a.startDate > moment().format(\"YYYY-MM-DD\") || a.endDate > b.endDate) return 1;\n        if (a.endDate < b.endDate || a.startDate < b.startDate) return -1;\n        return 0;\n    }\n\n    function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n        repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n\n        setAddTaskKey(uuidv4());\n\n        props.addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n            repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays);\n    }\n\n    return (\n        <Col>\n            <Row className=\"my-2\">\n                <Intro tasks={props.tasks} />\n            </Row>\n\n            <Row className=\"my-2\">\n                <AddTask key={addTaskKey} addTask={addTask} tasks={props.tasks}/>\n                </Row>\n\n            {props.tasks.sort(compare).map(task => (\n                <Row key={task.id} className=\"my-2\">\n                    <TaskItem completeTask={props.completeTask} deleteTask={props.deleteTask} openTaskCard={props.openTaskCard} {...task} />\n                </Row>\n            ))}\n\n        </Col>\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n    // const copy = \"\\u00A9\";\n  return (\n      <footer className=\"block-quote footer\">\n          <div className=\"container\">\n              <span>\n                  <cite>Saoirse Bryar, 2020</cite>\n              </span>\n              \n          </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport moment from 'moment';\nimport './CustomTooltip.css';\nimport tinycolor from 'tinycolor2';\n\nfunction CustomTooltip(props) {  \n  return (\n        <div className=\"tooltip--container\" style={{backgroundColor: `${tinycolor(props.point.serieColor).lighten(15).toString()}`}}>\n            {props.point.data.y} <br/>\n            {props.point.id.endsWith(\"0\") && \"Start: \"}            \n            {props.point.id.endsWith(\"1\") && \"Due: \"}\n            {moment(props.point.data.x).format(\"MMM DD\")}\n        </div>\n        )      \n}\n\nexport default CustomTooltip;\n\n\n","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport CustomTooltip from './CustomTooltip';\n\nimport './TaskGraph.css';\n\nfunction TaskGraph(props) {\n\n  const theme = {\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\"\n  };\n\n  const data = props.tasks.filter(task => task.completed === false).map(task => {\n    let newTask = {};\n    newTask.id = task.id;\n    let startData = {};\n    startData.x = task.startDate;\n    startData.y = task.name;\n    let endData = {};\n    endData.x = task.endDate;\n    endData.y = task.name;\n    newTask.data = [startData, endData];\n    return newTask;\n  })\n\n  function handleGraphClick(Point) {\n    const id = Point.id.slice(0, -2);\n    props.setPage(\"Tasks\");\n    props.openFromGraphId(id);\n  }\n\n  // Using code from tylercrosse https://github.com/plouc/nivo/issues/353\n  const HorizontalTick = ({ textAnchor, textBaseline, value, x, y }) => {\n    const MAX_LINE_LENGTH = 16;\n    const MAX_LINES = 2;\n    const LENGTH_OF_ELLIPSIS = 3;\n    const TRIM_LENGTH = MAX_LINE_LENGTH * MAX_LINES - LENGTH_OF_ELLIPSIS;\n    const trimWordsOverLength = new RegExp(`^(.{${TRIM_LENGTH}}[^\\\\w]*).*`);\n    const groupWordsByLength = new RegExp(\n      `([^\\\\s].{0,${MAX_LINE_LENGTH}}(?=[\\\\s\\\\W]|$))`,\n      'gm',\n    );\n    const splitValues = value\n      .replace(trimWordsOverLength, '$1...')\n      .match(groupWordsByLength)\n      .slice(0, 2)\n      .map((val, i) => (\n        <tspan\n          key={val}\n          dy={16 * i}\n          x={-10}\n          style={{ fontFamily: \"Verdana, Arial, sans-serif\", fontSize: \"14px\" }}\n        >\n          {val}\n        </tspan>\n      ));\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text alignmentBaseline={textBaseline} textAnchor={textAnchor}>\n          {splitValues}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveLine className=\"graph\"\n      data={data}\n      margin={{ top: 70, right: 20, bottom: 70, left: 150 }}\n      xScale={{\n        type: \"time\",\n        format: \"%Y-%m-%d\"\n      }}\n      xFormat=\"time:%Y-%m-%d\"\n      yScale={{\n        type: \"point\"\n      }}\n      axisTop={null}\n      axisRight={null}\n      axisLeft={{\n        renderTick: HorizontalTick\n      }}\n      axisBottom={{\n        format: \"%b %d\",\n        tickRotation: -45,\n        tickPadding: 15\n      }}\n      theme={theme}\n      colors={{ scheme: \"accent\" }}\n      lineWidth={20}\n      enablePoints={false}\n      enableGridX={true}\n      enableGridY={true}\n      tooltip={CustomTooltip}\n      useMesh={true}\n      onClick={handleGraphClick}\n    />\n  );\n}\n\nexport default TaskGraph;\n\n\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container } from 'react-bootstrap';\n\nimport Header from './Header/Header';\nimport TaskList from './TaskList/TaskList';\nimport Footer from './Footer/Footer';\nimport TaskGraph from './TaskGraph/TaskGraph';\n\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: uuidv4(),\n      name: \"Tidying\",\n      taskDetails: \"Sort through paperwork\",\n      startDate: \"2020-06-06\",\n      endDate: \"2020-06-11\",\n      percentageCompletion: 20,\n      completed: false,\n      repeats: false,\n      cardOpen: false\n    },\n    {\n      id: uuidv4(),\n      name: \"Cleaning\",\n      taskDetails: \"Clean bathrooms\",\n      startDate: \"2020-06-05\",\n      endDate: \"2020-06-10\",\n      percentageCompletion: 60,\n      completed: false,\n      repeats: true,\n      repeatType: \"repeatsAfterCompletion\",\n      repeatAfterCompletionFrequency: 7,\n      repeatAfterCompletionFrequencyType: \"days\",\n      cardOpen: false\n    },\n    {\n      id: uuidv4(),\n      name: \"Hoovering\",\n      taskDetails: \"Downstairs\",\n      startDate: \"2020-06-03\",\n      endDate: \"2020-06-04\",\n      percentageCompletion: 80,\n      completed: true,\n      completeDate: \"2020-04-26\",\n      repeats: false,\n      cardOpen: false\n    }\n  ]);\n\n  const [page, setPage] = useState(\"Tasks\");\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  function calculatePercentageCompletion(startDate, endDate) {\n    const now = moment().valueOf();\n    const start = moment(startDate, \"YYYY-MM-DD\").valueOf();\n    const end = moment(endDate, \"YYYY-MM-DD\").valueOf();\n    const percentageCompletion = ((now - start) / (end - start)) * 100;\n    if (percentageCompletion < 0) return 0;\n    return isFinite(percentageCompletion) ? percentageCompletion : 100;\n  }\n\n  function addTask(name, taskDetails, startDate, endDate, repeats, repeatType, repeatAfterCompletionFrequency,\n    repeatAfterCompletionFrequencyType, repeatRegularDaysFrequency, repeatRegularDaysArrayDays) {\n    const newTask = {\n      id: uuidv4(),\n      name,\n      taskDetails,\n      startDate,\n      endDate,\n      repeats,\n      repeatType,\n      repeatAfterCompletionFrequency,\n      repeatAfterCompletionFrequencyType,\n      repeatRegularDaysFrequency,\n      repeatRegularDaysArrayDays,\n      completed: false,\n      percentageCompletion: calculatePercentageCompletion(startDate, endDate),\n      cardOpen: false\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n  };\n\n  function completeTask(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        if (task.repeats === false) {\n          task.completed = true\n          task.completeDate = moment().format(\"YYYY-MM-DD\");\n        }\n        else if (task.repeatType === \"repeatsAfterCompletion\") {\n          task.endDate = moment().add(task.repeatAfterCompletionFrequency, task.repeatAfterCompletionFrequencyType).format(\"YYYY-MM-DD\");\n          task.startDate = moment().format(\"YYYY-MM-DD\");\n        }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function openTaskCard(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {task.cardOpen = !task.cardOpen}\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  function openFromGraphId(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {task.cardOpen = true}\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header setPage={setPage} />\n      {page === \"Tasks\" &&\n        <Container fluid=\"lg\">\n          <TaskList addTask={addTask} completeTask={completeTask} deleteTask={deleteTask} tasks={tasks} openFromGraphId={openFromGraphId} openTaskCard={openTaskCard}/>\n        </Container>\n      }\n      {page === \"Graph\" &&\n        <Container fluid=\"lg\" style={{ height: window.innerHeight - 125 < 600 ? window.innerHeight - 125 : 600 }}>\n          <TaskGraph tasks={tasks} setPage={setPage} openFromGraphId={openFromGraphId}></TaskGraph>\n        </Container>}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}